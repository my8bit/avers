{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"font-",
				"font-style"
			],
			[
				"fon",
				"font-size"
			],
			[
				"ft",
				"ftp-deploy"
			],
			[
				"ba",
				"background-color"
			],
			[
				"tab",
				"tab-pane"
			],
			[
				"path",
				"pathname"
			],
			[
				"val",
				"value"
			],
			[
				"is",
				"isValid"
			],
			[
				"ch",
				"children"
			],
			[
				"Todo",
				"Todos"
			],
			[
				"th",
				"th	Tag"
			],
			[
				"bo",
				"border"
			],
			[
				"req",
				"req"
			],
			[
				"in",
				"inputDate"
			],
			[
				"res",
				"result"
			],
			[
				"re",
				"res"
			],
			[
				"fe",
				"filename"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/index.jade",
			"settings":
			{
				"buffer_size": 8452,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/css/custom.css",
			"settings":
			{
				"buffer_size": 195,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/navigation.jade",
			"settings":
			{
				"buffer_size": 721,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/header.jade",
			"settings":
			{
				"buffer_size": 1024,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/layout.jade",
			"settings":
			{
				"buffer_size": 436,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/scripts.jade",
			"settings":
			{
				"buffer_size": 276,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 2848 files for \"livereload\"\n\n/Users/my8bit/Public/avers/jade/avers/Gruntfile.js:\n   81              ],\n   82              options: {\n   83:                 livereload: true\n   84              },\n   85              tasks: [\"jade\", \"copy\"]\n\n/Users/my8bit/Public/avers/jade/avers/build/ceni.html:\n   90      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n   91      <script src=\"js/helper.js\"></script>\n   92:     <script src=\"//localhost:35729/livereload.js\"></script>\n   93    </body>\n   94  </html>\n\n/Users/my8bit/Public/avers/jade/avers/build/chavo.html:\n   94      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n   95      <script src=\"js/helper.js\"></script>\n   96:     <script src=\"//localhost:35729/livereload.js\"></script>\n   97    </body>\n   98  </html>\n\n/Users/my8bit/Public/avers/jade/avers/build/garantii.html:\n   94      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n   95      <script src=\"js/helper.js\"></script>\n   96:     <script src=\"//localhost:35729/livereload.js\"></script>\n   97    </body>\n   98  </html>\n\n/Users/my8bit/Public/avers/jade/avers/build/index.html:\n  188      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n  189      <script src=\"js/helper.js\"></script>\n  190:     <script src=\"//localhost:35729/livereload.js\"></script>\n  191    </body>\n  192  </html>\n\n/Users/my8bit/Public/avers/jade/avers/build/kontakti.html:\n  102      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n  103      <script src=\"js/helper.js\"></script>\n  104:     <script src=\"//localhost:35729/livereload.js\"></script>\n  105    </body>\n  106  </html>\n\n/Users/my8bit/Public/avers/jade/avers/build/livereload.js:\n   13        this.Timer = Timer;\n   14        this.handlers = handlers;\n   15:       this._uri = \"ws\" + (this.options.https ? \"s\" : \"\") + \"://\" + this.options.host + \":\" + this.options.port + \"/livereload\";\n   16        this._nextDelay = this.options.mindelay;\n   17        this._connectionDesired = false;\n   ..\n  260          link.href = this.host.generateCacheBustUrl(link.href);\n  261        }\n  262:       this.host.console.log(\"LiveReload is asking LESS to recompile all stylesheets\");\n  263        this.window.less.refresh(true);\n  264        return true;\n  ...\n  279  },{}],4:[function(require,module,exports){\n  280  (function() {\n  281:   var Connector, LiveReload, Options, Reloader, Timer,\n  282      __hasProp = {}.hasOwnProperty;\n  283  \n  ...\n  290    Reloader = require('./reloader').Reloader;\n  291  \n  292:   exports.LiveReload = LiveReload = (function() {\n  293:     function LiveReload(window) {\n  294        var k, v, _ref;\n  295        this.window = window;\n  ...\n  305        };\n  306        if (!(this.WebSocket = this.window.WebSocket || this.window.MozWebSocket)) {\n  307:         this.console.error(\"LiveReload disabled because the browser does not seem to support web sockets\");\n  308          return;\n  309        }\n  310:       if ('LiveReloadOptions' in window) {\n  311          this.options = new Options();\n  312:         _ref = window['LiveReloadOptions'];\n  313          for (k in _ref) {\n  314            if (!__hasProp.call(_ref, k)) continue;\n  ...\n  319          this.options = Options.extract(this.window.document);\n  320          if (!this.options) {\n  321:           this.console.error(\"LiveReload disabled because it could not find its own <SCRIPT> tag\");\n  322            return;\n  323          }\n  ...\n  337                _base.connect();\n  338              }\n  339:             _this.log(\"LiveReload is connected to \" + _this.options.host + \":\" + _this.options.port + \" (protocol v\" + protocol + \").\");\n  340              return _this.analyze();\n  341            };\n  ...\n  349              } else {\n  350                if (typeof console !== \"undefined\" && console !== null) {\n  351:                 return console.log(\"LiveReload internal error: \" + e.message);\n  352                }\n  353              }\n  ...\n  362              switch (reason) {\n  363                case 'cannot-connect':\n  364:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \", will retry in \" + nextDelay + \" sec.\");\n  365                case 'broken':\n  366:                 return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \", reconnecting in \" + nextDelay + \" sec.\");\n  367                case 'handshake-timeout':\n  368:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake timeout), will retry in \" + nextDelay + \" sec.\");\n  369                case 'handshake-failed':\n  370:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake failed), will retry in \" + nextDelay + \" sec.\");\n  371                case 'manual':\n  372                  break;\n  ...\n  374                  break;\n  375                default:\n  376:                 return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \" (\" + reason + \"), reconnecting in \" + nextDelay + \" sec.\");\n  377              }\n  378            };\n  ...\n  392      }\n  393  \n  394:     LiveReload.prototype.on = function(eventName, handler) {\n  395        return this.listeners[eventName] = handler;\n  396      };\n  397  \n  398:     LiveReload.prototype.log = function(message) {\n  399        return this.console.log(\"\" + message);\n  400      };\n  401  \n  402:     LiveReload.prototype.performReload = function(message) {\n  403        var _ref, _ref1;\n  404:       this.log(\"LiveReload received reload request: \" + (JSON.stringify(message, null, 2)));\n  405        return this.reloader.reload(message.path, {\n  406          liveCSS: (_ref = message.liveCSS) != null ? _ref : true,\n  ...\n  412      };\n  413  \n  414:     LiveReload.prototype.performAlert = function(message) {\n  415        return alert(message.message);\n  416      };\n  417  \n  418:     LiveReload.prototype.shutDown = function() {\n  419        var _base;\n  420        if (!this.initialized) {\n  ...\n  422        }\n  423        this.connector.disconnect();\n  424:       this.log(\"LiveReload disconnected.\");\n  425        return typeof (_base = this.listeners).shutdown === \"function\" ? _base.shutdown() : void 0;\n  426      };\n  427  \n  428:     LiveReload.prototype.hasPlugin = function(identifier) {\n  429        return !!this.pluginIdentifiers[identifier];\n  430      };\n  431  \n  432:     LiveReload.prototype.addPlugin = function(pluginClass) {\n  433        var plugin;\n  434        if (!this.initialized) {\n  ...\n  440        this.pluginIdentifiers[pluginClass.identifier] = true;\n  441        plugin = new pluginClass(this.window, {\n  442:         _livereload: this,\n  443          _reloader: this.reloader,\n  444          _connector: this.connector,\n  ...\n  455      };\n  456  \n  457:     LiveReload.prototype.analyze = function() {\n  458        var plugin, pluginData, pluginsData, _i, _len, _ref;\n  459        if (!this.initialized) {\n  ...\n  477      };\n  478  \n  479:     return LiveReload;\n  480  \n  481    })();\n  ...\n  519      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  520        element = _ref[_i];\n  521:       if ((src = element.src) && (m = src.match(/^[^:]+:\\/\\/(.*)\\/z?livereload\\.js(?:\\?(.*))?$/))) {\n  522          options = new Options();\n  523          options.https = src.indexOf(\"https\") === 0;\n  ...\n  550      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n  551  \n  552:   exports.PROTOCOL_6 = PROTOCOL_6 = 'http://livereload.com/protocols/official-6';\n  553  \n  554:   exports.PROTOCOL_7 = PROTOCOL_7 = 'http://livereload.com/protocols/official-7';\n  555  \n  556    exports.ProtocolError = ProtocolError = (function() {\n  557      function ProtocolError(reason, data) {\n  558:       this.message = \"LiveReload protocol error (\" + reason + \") after receiving data: \\\"\" + data + \"\\\".\";\n  559      }\n  560  \n  ...\n  871          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  872            link = _ref[_i];\n  873:           if (link.rel.match(/^stylesheet$/i) && !link.__LiveReload_pendingRemoval) {\n  874              _results.push(link);\n  875            }\n  ...\n  896          }\n  897        }\n  898:       this.console.log(\"LiveReload found \" + links.length + \" LINKed stylesheets, \" + imported.length + \" @imported stylesheets\");\n  899        match = pickBestMatch(path, links.concat(imported), (function(_this) {\n  900          return function(l) {\n  ...\n  904        if (match) {\n  905          if (match.object.rule) {\n  906:           this.console.log(\"LiveReload is reloading imported stylesheet: \" + match.object.href);\n  907            this.reattachImportedRule(match.object);\n  908          } else {\n  909:           this.console.log(\"LiveReload is reloading stylesheet: \" + (this.linkHref(match.object)));\n  910            this.reattachStylesheetLink(match.object);\n  911          }\n  912        } else {\n  913:         this.console.log(\"LiveReload will reload all stylesheets because path '\" + path + \"' did not match any specific one\");\n  914          for (_l = 0, _len3 = links.length; _l < _len3; _l++) {\n  915            link = links[_l];\n  ...\n  963        clone.onload = (function(_this) {\n  964          return function() {\n  965:           _this.console.log(\"LiveReload: the new stylesheet has finished loading\");\n  966            _this.knownToSupportCssOnLoad = true;\n  967            return executeCallback();\n  ...\n  972            return function() {\n  973              if (clone.sheet) {\n  974:               _this.console.log(\"LiveReload is polling until the new CSS finishes loading...\");\n  975                return executeCallback();\n  976              } else {\n  ...\n  989      Reloader.prototype.reattachStylesheetLink = function(link) {\n  990        var clone, parent;\n  991:       if (link.__LiveReload_pendingRemoval) {\n  992          return;\n  993        }\n  994:       link.__LiveReload_pendingRemoval = true;\n  995        if (link.tagName === 'STYLE') {\n  996          clone = this.document.createElement('link');\n  ...\n 1036        media = rule.media.length ? [].join.call(rule.media, ', ') : '';\n 1037        newRule = \"@import url(\\\"\" + href + \"\\\") \" + media + \";\";\n 1038:       rule.__LiveReload_newHref = href;\n 1039        tempLink = this.document.createElement(\"link\");\n 1040        tempLink.rel = 'stylesheet';\n 1041        tempLink.href = href;\n 1042:       tempLink.__LiveReload_pendingRemoval = true;\n 1043        if (link.parentNode) {\n 1044          link.parentNode.insertBefore(tempLink, link);\n ....\n 1049              tempLink.parentNode.removeChild(tempLink);\n 1050            }\n 1051:           if (rule.__LiveReload_newHref !== href) {\n 1052              return;\n 1053            }\n ....\n 1055            parent.deleteRule(index + 1);\n 1056            rule = parent.cssRules[index];\n 1057:           rule.__LiveReload_newHref = href;\n 1058            return _this.Timer.start(_this.importCacheWaitPeriod, function() {\n 1059:             if (rule.__LiveReload_newHref !== href) {\n 1060                return;\n 1061              }\n ....\n 1068  \n 1069      Reloader.prototype.generateUniqueString = function() {\n 1070:       return 'livereload=' + Date.now();\n 1071      };\n 1072  \n ....\n 1081            originalUrl = url;\n 1082            url = this.options.serverURL + this.options.overrideURL + \"?url=\" + encodeURIComponent(url);\n 1083:           this.console.log(\"LiveReload is overriding source URL \" + originalUrl + \" with \" + url);\n 1084          }\n 1085        }\n 1086:       params = oldParams.replace(/(\\?|&)livereload=(\\d+)/, function(match, sep) {\n 1087          return \"\" + sep + expando;\n 1088        });\n ....\n 1105  },{}],8:[function(require,module,exports){\n 1106  (function() {\n 1107:   var CustomEvents, LiveReload, k;\n 1108  \n 1109    CustomEvents = require('./customevents');\n 1110  \n 1111:   LiveReload = window.LiveReload = new (require('./livereload').LiveReload)(window);\n 1112  \n 1113    for (k in window) {\n 1114:     if (k.match(/^LiveReloadPlugin/)) {\n 1115:       LiveReload.addPlugin(window[k]);\n 1116      }\n 1117    }\n 1118  \n 1119:   LiveReload.addPlugin(require('./less'));\n 1120  \n 1121:   LiveReload.on('shutdown', function() {\n 1122:     return delete window.LiveReload;\n 1123    });\n 1124  \n 1125:   LiveReload.on('connect', function() {\n 1126:     return CustomEvents.fire(document, 'LiveReloadConnect');\n 1127    });\n 1128  \n 1129:   LiveReload.on('disconnect', function() {\n 1130:     return CustomEvents.fire(document, 'LiveReloadDisconnect');\n 1131    });\n 1132  \n 1133:   CustomEvents.bind(document, 'LiveReloadShutDown', function() {\n 1134:     return LiveReload.shutDown();\n 1135    });\n 1136  \n 1137  }).call(this);\n 1138  \n 1139: },{\"./customevents\":2,\"./less\":3,\"./livereload\":4}],9:[function(require,module,exports){\n 1140  (function() {\n 1141    var Timer;\n\n/Users/my8bit/Public/avers/jade/avers/build/obustroistvo.html:\n   94      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n   95      <script src=\"js/helper.js\"></script>\n   96:     <script src=\"//localhost:35729/livereload.js\"></script>\n   97    </body>\n   98  </html>\n\n/Users/my8bit/Public/avers/jade/avers/build/stroitelstvo.html:\n   94      <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js\"></script>\n   95      <script src=\"js/helper.js\"></script>\n   96:     <script src=\"//localhost:35729/livereload.js\"></script>\n   97    </body>\n   98  </html>\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/README.md:\n  177  This option will trigger the run of each specified task at startup of the watcher.\n  178  \n  179: #### options.livereload\n  180  Type: `Boolean|Number|Object`\n  181  Default: false\n  182  \n  183: Set to `true` or set `livereload: 1337` to a port number to enable live reloading. Default and recommended port is `35729`.\n  184  \n  185  If enabled a live reload server will be started with the watch task per target. Then after the indicated tasks have ran, the live reload server will be triggered with the modified files.\n  ...\n  192      tasks: ['sass'],\n  193      options: {\n  194:       livereload: true,\n  195      },\n  196    },\n  ...\n  198  ```\n  199  \n  200: It's possible to get livereload working over https connections. To do this, pass an object to `livereload` with a `key` and `cert` paths specified.\n  201  \n  202  Example:\n  ...\n  207      tasks: ['sass'],\n  208      options: {\n  209:       livereload: {\n  210          port: 9000,\n  211          key: grunt.file.read('path/to/ssl.key'),\n  ...\n  225  Ability to set the current working directory. Defaults to `process.cwd()`. Can either be a string to set the cwd to match files and spawn tasks. Or an object to set each independently. Such as `options: { cwd: { files: 'match/files/from/here', spawn: 'but/spawn/files/from/here' } }`.\n  226  \n  227: #### options.livereloadOnError\n  228  Type: `Boolean`  \n  229  Default: `true`  \n  230  \n  231: Option to prevent the livereload if the executed tasks encountered an error.  If set to `false`, the livereload will only be triggered if all tasks completed successfully.\n  232  \n  233  ### Examples\n  ...\n  325  \n  326  #### Live Reloading\n  327: Live reloading is built into the watch task. Set the option `livereload` to `true` to enable on the default port `35729` or set to a custom port: `livereload: 1337`.\n  328  \n  329: The simplest way to add live reloading to all your watch targets is by setting `livereload` to `true` at the task level. This will run a single live reload server and trigger the live reload for all your watch targets:\n  330  \n  331  ```js\n  ...\n  333    watch: {\n  334      options: {\n  335:       livereload: true,\n  336      },\n  337      css: {\n  ...\n  353        options: {\n  354          // Start a live reload server on the default port 35729\n  355:         livereload: true,\n  356        },\n  357      },\n  ...\n  361        options: {\n  362          // Start another live reload server on port 1337\n  363:         livereload: 1337,\n  364        },\n  365      },\n  ...\n  373  \n  374  ##### Enabling Live Reload in Your HTML\n  375: Once you've started a live reload server you'll be able to access the live reload script. To enable live reload on your page, add a script tag before your closing `</body>` tag pointing to the `livereload.js` script:\n  376  \n  377  ```html\n  378: <script src=\"//localhost:35729/livereload.js\"></script>\n  379  ```\n  380  \n  ...\n  382  \n  383  ##### Using Live Reload with the Browser Extension\n  384: Instead of adding a script tag to your page, you can live reload your page by installing a browser extension. Please visit [how do I install and use the browser extensions](http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-) for help installing an extension for your browser.\n  385  \n  386  Once installed please use the default live reload port `35729` and the browser extension will automatically reload your page without needing the `<script>` tag.\n  387  \n  388  ##### Using Connect Middleware\n  389: Since live reloading is used when developing, you may want to disable building for production (and are not using the browser extension). One method is to use Connect middleware to inject the script tag into your page. Try the [connect-livereload](https://github.com/intesso/connect-livereload) middleware for injecting the live reload script into your page.\n  390  \n  391  ##### Rolling Your Own Live Reload\n  ...\n  404  \n  405  ##### Live Reload with Preprocessors\n  406: Any time a watched file is edited with the `livereload` option enabled, the file will be sent to the live reload server. Some edited files you may desire to have sent to the live reload server, such as when preprocessing (`sass`, `less`, `coffeescript`, etc). As any file not recognized will reload the entire page as opposed to just the `css` or `javascript`.\n  407  \n  408: The solution is to point a `livereload` watch target to your destination files:\n  409  \n  410  ```js\n  ...\n  422        tasks: ['sass'],\n  423      },\n  424:     livereload: {\n  425        // Here we watch the files the sass task will compile to\n  426        // These files are sent to the live reload server after sass compiles to them\n  427:       options: { livereload: true },\n  428        files: ['dest/**/*'],\n  429      },\n  ...\n  458  \n  459   * 2014-03-19   v0.6.1   Fix for watch targets named \"default\"\n  460:  * 2014-03-11   v0.6.0   Clear changed files after triggering live reload to ensure they're only triggered once. cwd option now accepts separate settings for files and spawn. Fix to make interrupt work more than once. Enable live reload over HTTPS. Print newline after initial 'Waiting...' Remove deprecated grunt.util libs Add reload option to specify files other than Gruntfile files to reload. Update to gaze@0.5.1 Use fork of tiny-lr (which has quiter operation, support for HTTPS and windows path fixes) Add livereloadOnError, which if set to false will not trigger live reload if there is an error.\n  461   * 2013-08-25   v0.5.3   Fixed for live reload missing files.\n  462   * 2013-08-16   v0.5.2   Fixed issue running tasks after gruntfile is reloaded. Ignores empty file paths.\n  ...\n  466   * 2013-05-11   v0.4.3   Only group changed files per target to send correct files to live reload.\n  467   * 2013-05-09   v0.4.2   Fix for closing watchers.\n  468:  * 2013-05-09   v0.4.1   Removed \"beep\" notification. Tasks now optional with livereload option. Reverted \"run again\" with interrupt off to fix infinite recursion issue. Watchers now close more properly on task run.\n  469:  * 2013-05-03   v0.4.0   Option livereload to start live reload servers. Will reload a Gruntfile before running tasks if Gruntfile is modified. Option event to only trigger watch on certain events. Refactor watch task into separate task runs per target. Option forever to override grunt.fatal/warn to help keeping the watch alive with nospawn enabled. Emit a beep upon complete. Logs all watched files with verbose flag set. If interrupt is off, will run the tasks once more if watch triggered during a previous task run. tasks property is optional for use with watch event. Watchers properly closed when exiting.\n  470   * 2013-02-28   v0.3.1   Fix for top level options.\n  471   * 2013-02-27   v0.3.0   nospawn option added to run tasks without spawning as child processes. Watch emits 'watch' events upon files being triggered with grunt.event. Completion time in seconds and date/time shown after tasks ran. Negate file patterns fixed. Tasks debounced individually to handle simultaneous triggering for multiple targets. Errors handled better and viewable with --stack cli option. Code complexity reduced making the watch task code easier to read.\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/package.json:\n    4    },\n    5    \"name\": \"tiny-lr-fork\",\n    6:   \"description\": \"Tiny LiveReload server, background-friendly\",\n    7    \"version\": \"0.0.5\",\n    8    \"homepage\": \"https://github.com/mklabs/tiny-lr\",\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/readme.md:\n    4  \n    5  * Quieter, removes `console.log`s\n    6: * Use WSS when livereload.js is on HTTPS\n    7: * Normalize windows paths in livereload.js\n    8  \n    9  ---\n   ..\n   12  -------\n   13  \n   14: This script manages a tiny [LiveReload](http://livereload.com/) server\n   15  implementation you can spawn in the background.\n   16  \n   ..\n   31  \n   32  Instead, it exposes a very simple API to notify the server that some\n   33: changes have been made, that is then broadcasted to every livereload client\n   34  connected.\n   35  \n   ..\n   47      curl -X POST http://localhost:35729/changed -d '{ \"files\": [\"style.css\", \"app.js\"] }'\n   48  \n   49: As for the livereload client, you need to install the browser extension:\n   50: http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-\n   51  (**note**: you need to listen on port 35729 to be able to use with your\n   52  brower extension)\n   53  \n   54: or add the livereload script tag manually:\n   55: http://feedback.livereload.com/knowledgebase/articles/86180-how-do-i-add-the-script-tag-manually-\n   56  (and here you can choose whatever port you want)\n   57  \n   ..\n   81  var tinylr = require('tiny-lr');\n   82  \n   83: // standard LiveReload port\n   84  var port = 35729;\n   85  \n   ..\n  136  \n  137  The port you listen on is important, and tinylr should **always** listen on\n  138: the LiveReload standard one: `35729`. Otherwise, you won't be able to rely\n  139  on the browser extensions, though you can still use the manual snippet\n  140  approach.\n  141  \n  142  You can also start two different servers, one on your app port, the\n  143: other listening on the LiveReload port. Check the\n  144  `examples/express/server.js` file to see how.\n  145  \n  ...\n  180  Include this file into your project Makefile to bring in the following targets:\n  181  \n  182: - start 						- Start the LiveReload server\n  183: - stop 							- Stops the LiveReload server\n  184: - livereload 				- alias to start\n  185: - livereload-stop 	- aias to stop\n  186  \n  187  Then define your \"empty\" targets, and the list of files you want to monitor.\n  ...\n  191  CSS_FILES = $(shell find $(CSS_DIR) -name '*.css')\n  192  \n  193: # include the livereload targets\n  194  include node_modules/tiny-lr/tasks/*.mk\n  195  \n  ...\n  199    curl -X POST http://localhost:35729/changed -d '{ \"files\": \"$?\" }'\n  200  \n  201: reload-css: livereload $(CSS_DIR)\n  202  \n  203  .PHONY: reload-css\n  ...\n  208  - define a target for your root directory that triggers a POST request\n  209  - `touch` the directory to update its mtime\n  210: - add reload target with `livereload` and the list of files to \"watch\" as\n  211    prerequisites\n  212  \n  ...\n  218  \n  219  Combine this with [visionmedia/watch](https://github.com/visionmedia/watch) and\n  220: you have a livereload environment.\n  221  \n  222      watch make reload\n  ...\n  241       - [GET /changed](#tiny-lr-get-changed)\n  242       - [POST /changed](#tiny-lr-post-changed)\n  243:      - [GET /livereload.js](#tiny-lr-get-livereloadjs)\n  244       - [GET /kill](#tiny-lr-get-kill)\n  245  <a name=\"\" />\n  ...\n  253  var server = this.app;\n  254  \n  255: var ws = this.ws = new WebSocket('ws://' + url.host + '/livereload');\n  256  \n  257  ws.onopen = function(event) {\n  258    var hello = {\n  259      command: 'hello',\n  260:     protocols: ['http://livereload.com/protocols/official-7']\n  261    };\n  262  \n  ...\n  267    assert.deepEqual(event.data, JSON.stringify({\n  268      command: 'hello',\n  269:     protocols: ['http://livereload.com/protocols/official-7'],\n  270      serverName: 'tiny-lr'\n  271    }));\n  ...\n  363  ```\n  364  \n  365: <a name=\"tiny-lr-get-livereloadjs\" />\n  366: ## GET /livereload.js\n  367: respond with livereload script.\n  368  \n  369  ```js\n  370  request(this.server)\n  371:   .get('/livereload.js')\n  372:   .expect(/LiveReload/)\n  373    .expect(200, done);\n  374  ```\n  ...\n  393  - 2013-01-21 - v0.0.5 - [PR #18](https://github.com/mklabs/tiny-lr/pull/18) / [PR #21](https://github.com/mklabs/tiny-lr/pull/21) - https support / expose reload flags through options\n  394  - 2013-01-21 - v0.0.4 - middleware support\n  395: - 2013-01-20 - v0.0.3 - serve livereload from repo (#4)\n  396  - 2013-01-12 - v0.0.2 - tasks - support for grunt 0.3.x (#1)\n  397  - 2013-01-05 - v0.0.1 - Initial release\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/bin/update-livereload:\n    5  var request = require('request');\n    6  \n    7: var file = path.join(__dirname, '..', 'lib/public/livereload.js');\n    8: var url = process.argv.slice(2)[0] || 'https://raw.github.com/livereload/livereload-js/master/dist/livereload.js';\n    9  \n   10: console.error('Updating livereload.js %s from %s', file, url);\n   11  request(url)\n   12    .pipe(fs.createWriteStream(file))\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/lib/client.js:\n   36      command: 'hello',\n   37      protocols: [\n   38:       'http://livereload.com/protocols/official-7'\n   39      ],\n   40      serverName: 'tiny-lr'\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/lib/server.js:\n   17    events.EventEmitter.call(this);\n   18  \n   19:   options.livereload = options.livereload || path.join(__dirname, 'public/livereload.js');\n   20    options.port = parseInt(options.port || 35729, 10);\n   21  \n   ..\n   23    this.on('GET /changed', this.changed.bind(this));\n   24    this.on('POST /changed', this.changed.bind(this));\n   25:   this.on('GET /livereload.js', this.livereload.bind(this));\n   26    this.on('GET /kill', this.close.bind(this));\n   27  \n   ..\n   57      done = done || function() {};\n   58      if(port !== self.options.port) {\n   59:       debug('Warn: LiveReload port is not standard (%d). You are listening on %d', self.options.port, port);\n   60:       debug('You\\'ll need to rely on the LiveReload snippet');\n   61:       debug('> http://feedback.livereload.com/knowledgebase/articles/86180-how-do-i-add-the-script-tag-manually-');\n   62      }\n   63  \n   ..\n   74  Server.prototype.handler = function handler(req, res, next) {\n   75    var middleware = typeof next === 'function';\n   76:   debug('LiveReload handler %s (middleware: %s)', req.url, middleware ? 'on' : 'off');\n   77  \n   78    if(middleware) {\n   ..\n  127    this.clients[client.id] = client;\n  128  \n  129:   debug('New LiveReload connection (id: %s)', client.id);\n  130    client.on('end', function() {\n  131      debug('Destroy client %s (url: %s)', client.id, client.url);\n  ...\n  163  // Routes\n  164  \n  165: Server.prototype.livereload = function livereload(req, res) {\n  166:   fs.createReadStream(this.options.livereload).pipe(res);\n  167  };\n  168  \n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/lib/public/livereload.js:\n    1  (function() {\n    2: var __customevents = {}, __protocol = {}, __connector = {}, __timer = {}, __options = {}, __reloader = {}, __livereload = {}, __less = {}, __startup = {};\n    3  \n    4  // customevents\n    .\n   45    return -1;\n   46  };\n   47: __protocol.PROTOCOL_6 = PROTOCOL_6 = 'http://livereload.com/protocols/official-6';\n   48: __protocol.PROTOCOL_7 = PROTOCOL_7 = 'http://livereload.com/protocols/official-7';\n   49  __protocol.ProtocolError = ProtocolError = (function() {\n   50    function ProtocolError(reason, data) {\n   51:     this.message = \"LiveReload protocol error (\" + reason + \") after receiving data: \\\"\" + data + \"\\\".\";\n   52    }\n   53    return ProtocolError;\n   ..\n  139      this.Timer = Timer;\n  140      this.handlers = handlers;\n  141:     this._uri = \"ws\" + (this.options.https ? \"s\" : \"\") + \"://\" + this.options.host + \":\" + this.options.port + \"/livereload\";\n  142      this._nextDelay = this.options.mindelay;\n  143      this._connectionDesired = false;\n  ...\n  344    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  345      element = _ref[_i];\n  346:     if ((src = element.src) && (m = src.match(/^[^:]+:\\/\\/(.*)\\/z?livereload\\.js(?:\\?(.*))?$/))) {\n  347        options = new Options();\n  348        options.https = src.indexOf(\"https\") === 0;\n  ...\n  606          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  607            link = _ref[_i];\n  608:           if (link.rel === 'stylesheet' && !link.__LiveReload_pendingRemoval) {\n  609              _results.push(link);\n  610            }\n  ...\n  631          }\n  632        }\n  633:       this.console.log(\"LiveReload found \" + links.length + \" LINKed stylesheets, \" + imported.length + \" @imported stylesheets\");\n  634        match = pickBestMatch(path, links.concat(imported), function(l) {\n  635          return pathFromUrl(_this.linkHref(l));\n  ...\n  637        if (match) {\n  638          if (match.object.rule) {\n  639:           this.console.log(\"LiveReload is reloading imported stylesheet: \" + match.object.href);\n  640            this.reattachImportedRule(match.object);\n  641          } else {\n  642:           this.console.log(\"LiveReload is reloading stylesheet: \" + (this.linkHref(match.object)));\n  643            this.reattachStylesheetLink(match.object);\n  644          }\n  645        } else {\n  646:         this.console.log(\"LiveReload will reload all stylesheets because path '\" + path + \"' did not match any specific one\");\n  647          for (_l = 0, _len3 = links.length; _l < _len3; _l++) {\n  648            link = links[_l];\n  ...\n  716        var clone, parent,\n  717          _this = this;\n  718:       if (link.__LiveReload_pendingRemoval) {\n  719          return;\n  720        }\n  721:       link.__LiveReload_pendingRemoval = true;\n  722        if (link.tagName === 'STYLE') {\n  723          clone = this.document.createElement('link');\n  ...\n  762        media = rule.media.length ? [].join.call(rule.media, ', ') : '';\n  763        newRule = \"@import url(\\\"\" + href + \"\\\") \" + media + \";\";\n  764:       rule.__LiveReload_newHref = href;\n  765        tempLink = this.document.createElement(\"link\");\n  766        tempLink.rel = 'stylesheet';\n  767        tempLink.href = href;\n  768:       tempLink.__LiveReload_pendingRemoval = true;\n  769        if (link.parentNode) {\n  770          link.parentNode.insertBefore(tempLink, link);\n  ...\n  774            tempLink.parentNode.removeChild(tempLink);\n  775          }\n  776:         if (rule.__LiveReload_newHref !== href) {\n  777            return;\n  778          }\n  ...\n  780          parent.deleteRule(index + 1);\n  781          rule = parent.cssRules[index];\n  782:         rule.__LiveReload_newHref = href;\n  783          return _this.Timer.start(_this.importCacheWaitPeriod, function() {\n  784:           if (rule.__LiveReload_newHref !== href) {\n  785              return;\n  786            }\n  ...\n  792  \n  793      Reloader.prototype.generateUniqueString = function() {\n  794:       return 'livereload=' + Date.now();\n  795      };\n  796  \n  ...\n  806          }\n  807        }\n  808:       params = oldParams.replace(/(\\?|&)livereload=(\\d+)/, function(match, sep) {\n  809          return \"\" + sep + expando;\n  810        });\n  ...\n  825  }).call(this);\n  826  \n  827: // livereload\n  828: var Connector, LiveReload, Options, Reloader, Timer;\n  829  \n  830  Connector = __connector.Connector;\n  ...\n  836  Reloader = __reloader.Reloader;\n  837  \n  838: __livereload.LiveReload = LiveReload = (function() {\n  839  \n  840:   function LiveReload(window) {\n  841      var _this = this;\n  842      this.window = window;\n  ...\n  849      };\n  850      if (!(this.WebSocket = this.window.WebSocket || this.window.MozWebSocket)) {\n  851:       console.error(\"LiveReload disabled because the browser does not seem to support web sockets\");\n  852        return;\n  853      }\n  854      if (!(this.options = Options.extract(this.window.document))) {\n  855:       console.error(\"LiveReload disabled because it could not find its own <SCRIPT> tag\");\n  856        return;\n  857      }\n  ...\n  865            _base.connect();\n  866          }\n  867:         _this.log(\"LiveReload is connected to \" + _this.options.host + \":\" + _this.options.port + \" (protocol v\" + protocol + \").\");\n  868          return _this.analyze();\n  869        },\n  ...\n  872            return console.log(\"\" + e.message + \".\");\n  873          } else {\n  874:           return console.log(\"LiveReload internal error: \" + e.message);\n  875          }\n  876        },\n  ...\n  882          switch (reason) {\n  883            case 'cannot-connect':\n  884:             return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \", will retry in \" + nextDelay + \" sec.\");\n  885            case 'broken':\n  886:             return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \", reconnecting in \" + nextDelay + \" sec.\");\n  887            case 'handshake-timeout':\n  888:             return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake timeout), will retry in \" + nextDelay + \" sec.\");\n  889            case 'handshake-failed':\n  890:             return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake failed), will retry in \" + nextDelay + \" sec.\");\n  891            case 'manual':\n  892              break;\n  ...\n  894              break;\n  895            default:\n  896:             return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \" (\" + reason + \"), reconnecting in \" + nextDelay + \" sec.\");\n  897          }\n  898        },\n  ...\n  908    }\n  909  \n  910:   LiveReload.prototype.on = function(eventName, handler) {\n  911      return this.listeners[eventName] = handler;\n  912    };\n  913  \n  914:   LiveReload.prototype.log = function(message) {\n  915      return this.console.log(\"\" + message);\n  916    };\n  917  \n  918:   LiveReload.prototype.performReload = function(message) {\n  919      var _ref, _ref2;\n  920:     this.log(\"LiveReload received reload request for \" + message.path + \".\");\n  921      return this.reloader.reload(message.path, {\n  922        liveCSS: (_ref = message.liveCSS) != null ? _ref : true,\n  ...\n  928    };\n  929  \n  930:   LiveReload.prototype.performAlert = function(message) {\n  931      return alert(message.message);\n  932    };\n  933  \n  934:   LiveReload.prototype.shutDown = function() {\n  935      var _base;\n  936      this.connector.disconnect();\n  937:     this.log(\"LiveReload disconnected.\");\n  938      return typeof (_base = this.listeners).shutdown === \"function\" ? _base.shutdown() : void 0;\n  939    };\n  940  \n  941:   LiveReload.prototype.hasPlugin = function(identifier) {\n  942      return !!this.pluginIdentifiers[identifier];\n  943    };\n  944  \n  945:   LiveReload.prototype.addPlugin = function(pluginClass) {\n  946      var plugin;\n  947      var _this = this;\n  ...\n  949      this.pluginIdentifiers[pluginClass.identifier] = true;\n  950      plugin = new pluginClass(this.window, {\n  951:       _livereload: this,\n  952        _reloader: this.reloader,\n  953        _connector: this.connector,\n  ...\n  962    };\n  963  \n  964:   LiveReload.prototype.analyze = function() {\n  965      var plugin, pluginData, pluginsData, _i, _len, _ref;\n  966      if (!(this.connector.protocol >= 7)) return;\n  ...\n  979    };\n  980  \n  981:   return LiveReload;\n  982  \n  983  })();\n  ...\n 1024        link.href = this.host.generateCacheBustUrl(link.href);\n 1025      }\n 1026:     this.host.console.log(\"LiveReload is asking LESS to recompile all stylesheets\");\n 1027      this.window.less.refresh(true);\n 1028      return true;\n ....\n 1037  \n 1038  // startup\n 1039: var CustomEvents, LiveReload, k;\n 1040  CustomEvents = __customevents;\n 1041: LiveReload = window.LiveReload = new (__livereload.LiveReload)(window);\n 1042  for (k in window) {\n 1043:   if (k.match(/^LiveReloadPlugin/)) {\n 1044:     LiveReload.addPlugin(window[k]);\n 1045    }\n 1046  }\n 1047: LiveReload.addPlugin(__less);\n 1048: LiveReload.on('shutdown', function() {\n 1049:   return delete window.LiveReload;\n 1050  });\n 1051: LiveReload.on('connect', function() {\n 1052:   return CustomEvents.fire(document, 'LiveReloadConnect');\n 1053  });\n 1054: LiveReload.on('disconnect', function() {\n 1055:   return CustomEvents.fire(document, 'LiveReloadDisconnect');\n 1056  });\n 1057: CustomEvents.bind(document, 'LiveReloadShutDown', function() {\n 1058:   return LiveReload.shutDown();\n 1059  });\n 1060  })();\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/tasks/tiny-lr.js:\n   30    //             :port - The port to listen on (defaults: 35729)\n   31    //\n   32:   grunt.registerTask('tinylr-start', 'Start the tiny livereload server', function() {\n   33      var options = _.defaults(grunt.config('tiny-lr') || {}, {\n   34        port: 35729\n   ..\n   58    //      }\n   59    //\n   60:   grunt.registerTask('tinylr-reload', 'Sends a reload notification to the livereload server, based on `watchFiles.changed`', function() {\n   61      if(!server) return;\n   62      var files = changed();\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/tasks/tiny-lr.mk:\n    1  # Include this file into your makefile to bring in the following targets:\n    2  #\n    3: # - start 						- Start the LiveReload server\n    4: # - stop 							- Stops the LiveReload server\n    5: # - livereload 				- alias to start\n    6: # - livereload-stop 	- aias to stop\n    7  #\n    8  # Then define your \"empty\" targets, and the list of files you want to monitor.\n    .\n   16  #   		curl -X POST http://localhost:35729/changed -d '{ \"files\": \"$?\" }'\n   17  #\n   18: #   	reload-css: livereload $(CSS_DIR)\n   19  #\n   20  #   	.PHONY: reload-css\n   ..\n   22  # The pattern is always the same, define a target for your root directory that\n   23  # triggers a POST request and `touch` the directory to update its mtime, a\n   24: # reload target with `livereload` target and the list of files to \"watch\" as\n   25  # prerequisites\n   26  #\n   ..\n   43  	# Or: @[ -a tiny-lr.pid ] && kill $(shell cat tiny-lr.pid)\n   44  \n   45: livereload: start\n   46: livereload-stop: stop\n   47  \n   48  \n   49: .PHONY: start stop livereload livereload-stop\n   50  \n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/test/client.js:\n   22      var server = this.app;\n   23  \n   24:     var ws = this.ws = new WebSocket('ws://' + url.host + '/livereload');\n   25  \n   26      ws.onopen = function(event) {\n   27        var hello = {\n   28          command: 'hello',\n   29:         protocols: ['http://livereload.com/protocols/official-7']\n   30        };\n   31  \n   ..\n   36        assert.deepEqual(event.data, JSON.stringify({\n   37          command: 'hello',\n   38:         protocols: ['http://livereload.com/protocols/official-7'],\n   39          serverName: 'tiny-lr'\n   40        }));\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/test/middleware.js:\n   97    });\n   98  \n   99:   describe('GET /livereload.js', function() {\n  100:     it('respond with livereload script', function(done) {\n  101        request(this.server)\n  102:         .get('/livereload.js')\n  103:         .expect(/LiveReload/)\n  104          .expect(200, done);\n  105      });\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/test/server.js:\n   72    });\n   73  \n   74:   describe('GET /livereload.js', function() {\n   75:     it('respond with livereload script', function(done) {\n   76        request(this.server)\n   77:         .get('/livereload.js')\n   78:         .expect(/LiveReload/)\n   79          .expect(200, done);\n   80      });\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/tasks/lib/taskrun.js:\n   15  module.exports = function(grunt) {\n   16  \n   17:   var livereload = require('./livereload')(grunt);\n   18  \n   19    // Create a TaskRun on a target\n   ..\n   27      this.changedFiles = Object.create(null);\n   28      this.spawnTaskFailure = false;\n   29:     this.livereloadOnError = true;\n   30:     if (typeof this.options.livereloadOnError !== 'undefined') {\n   31:       this.livereloadOnError = this.options.livereloadOnError;\n   32      }\n   33    }\n   ..\n   61      }\n   62  \n   63:     // If no tasks just call done to trigger potential livereload\n   64      if (self.tasks.length < 1) { return done(); }\n   65  \n   ..\n  101      this.errorsAndWarningsCount = getErrorCount();\n  102  \n  103:     // Trigger livereload if necessary\n  104:     if (this.livereload && (this.livereloadOnError || !taskFailed)) {\n  105:       this.livereload.trigger(Object.keys(this.changedFiles));\n  106        this.changedFiles = Object.create(null);\n  107      }\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/grunt-contrib-watch/tasks/lib/taskrunner.js:\n   24  \n   25    var TaskRun = require('./taskrun')(grunt);\n   26:   var livereload = require('./livereload')(grunt);\n   27  \n   28    function Runner() {\n   ..\n   46      // For re-queuing arguments with the task that originally ran this\n   47      this.nameArgs = [];\n   48:     // A list of changed files to feed to task runs for livereload\n   49      this.changedFiles = Object.create(null);\n   50    }\n   ..\n   68      self.done = done || grunt.task.current.async();\n   69  \n   70:     // If a default livereload server for all targets\n   71      // Use task level unless target level overrides\n   72:     var taskLRConfig = grunt.config([self.name, 'options', 'livereload']);\n   73      if (self.options.target && taskLRConfig) {\n   74:       var targetLRConfig = grunt.config([self.name, self.options.target, 'options', 'livereload']);\n   75        if (targetLRConfig) {\n   76          // Dont use task level as target level will be used instead\n   ..\n   79      }\n   80      if (taskLRConfig) {\n   81:       self.livereload = livereload(taskLRConfig);\n   82      }\n   83  \n   ..\n  236        var tr = new TaskRun(target);\n  237  \n  238:       // Add livereload to task runs\n  239        // Get directly from config as task level options are merged.\n  240        // We only want a single default LR server and then\n  241        // allow each target to override their own.\n  242:       var lrconfig = grunt.config([this.name, target.name || 0, 'options', 'livereload']);\n  243        if (lrconfig) {\n  244:         tr.livereload = livereload(lrconfig);\n  245:       } else if (this.livereload && lrconfig !== false) {\n  246:         tr.livereload = this.livereload;\n  247        }\n  248  \n  ...\n  267          len--;\n  268  \n  269:         // if we're just livereloading and no tasks\n  270          // it can happen too fast and we dont report it\n  271:         if (target.options.livereload && target.tasks.length < 1) {\n  272            time += 0.0001;\n  273          }\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/package.json:\n    2    \"_args\": [\n    3      [\n    4:       \"livereload-js\",\n    5        \"/Users/my8bit/Public/avers/jade/avers\"\n    6      ]\n    7    ],\n    8:   \"_from\": \"livereload-js@latest\",\n    9:   \"_id\": \"livereload-js@2.2.2\",\n   10    \"_inCache\": true,\n   11    \"_installable\": true,\n   12:   \"_location\": \"/livereload-js\",\n   13    \"_nodeVersion\": \"0.10.35\",\n   14    \"_npmUser\": {\n   ..\n   19    \"_phantomChildren\": {},\n   20    \"_requested\": {\n   21:     \"name\": \"livereload-js\",\n   22:     \"raw\": \"livereload-js\",\n   23      \"rawSpec\": \"\",\n   24      \"scope\": null,\n   ..\n   29      \"#USER\"\n   30    ],\n   31:   \"_resolved\": \"https://registry.npmjs.org/livereload-js/-/livereload-js-2.2.2.tgz\",\n   32    \"_shasum\": \"6c87257e648ab475bc24ea257457edcc1f8d0bc2\",\n   33    \"_shrinkwrap\": null,\n   34:   \"_spec\": \"livereload-js\",\n   35    \"_where\": \"/Users/my8bit/Public/avers/jade/avers\",\n   36    \"bugs\": {\n   37:     \"url\": \"https://github.com/zaius/livereload-js/issues\"\n   38    },\n   39    \"dependencies\": {},\n   40:   \"description\": \"LiveReload JS client - auto reload browser on changes\",\n   41    \"devDependencies\": {\n   42      \"coffee-script\": \"~1.7.1\",\n   ..\n   54    \"dist\": {\n   55      \"shasum\": \"6c87257e648ab475bc24ea257457edcc1f8d0bc2\",\n   56:     \"tarball\": \"http://registry.npmjs.org/livereload-js/-/livereload-js-2.2.2.tgz\"\n   57    },\n   58    \"gitHead\": \"e1d943628005ad8d18a50ee1e8c29858ca748d10\",\n   59:   \"homepage\": \"https://github.com/zaius/livereload-js\",\n   60    \"license\": \"MIT\",\n   61    \"main\": \"lib/startup.js\",\n   ..\n   66      }\n   67    ],\n   68:   \"name\": \"livereload-js\",\n   69    \"optionalDependencies\": {},\n   70    \"readme\": \"ERROR: No README data found!\",\n   71    \"repository\": {\n   72      \"type\": \"git\",\n   73:     \"url\": \"git://github.com/zaius/livereload-js.git\"\n   74    },\n   75    \"scripts\": {\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/README.md:\n    1: LiveReload.js\n    2  =============\n    3  \n    4: What is LiveReload?\n    5  -------------------\n    6  \n    7: LiveReload is a tool for web developers and designers. See [livereload.com](http://livereload.com) for more info.\n    8  \n    9: To use LiveReload, you need a client (this script) in your browser and a server running on your development machine.\n   10  \n   11: This repository (livereload.js) implements the client side of the protocol. The client connects to a LiveReload server via web sockets and listens for incoming change notifications. When a CSS or an image file is modified, it is live-refreshed without reloading the page. When any other file is modified, the page is reloaded.\n   12  \n   13  The server notifies the client whenever a change is made. Available servers are:\n   14  \n   15: * [LiveReload app for Mac](http://livereload.com/)\n   16: * [rack-livereload](https://github.com/johnbintz/rack-livereload)\n   17: * [guard-livereload](https://github.com/guard/guard-livereload)\n   18  * [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)\n   19  * more available on Google :-)\n   20: * you can even write your own; refer to the [LiveReload protocol](http://help.livereload.com/kb/ecosystem/livereload-protocol)\n   21  \n   22: If you are a web developer looking to _use_ LiveReload, you should refer to your LiveReload server/app/tool's documentation, rather that this repository. **You should use the copy of livereload.js script bundled with your server**, because it's guaranteed to be compatible, and may be customized for that server.\n   23  \n   24: Most LiveReload server vendors will serve livereload.js on the LiveReload port. When your server is running, you can typically access the script at `http://0.0.0.0:35729/livereload.js`.\n   25  \n   26  Please read on *only* if you are:\n   27  \n   28: * using a server that doesn't document the usage of livereload.js\n   29: * interested in hacking on livereload.js or want to understand it better\n   30: * developing a LiveReload server\n   31  \n   32  \n   33: What is livereload.js?\n   34  ----------------------\n   35  \n   36: This repository contains a JavaScript file implementing the client side of the LiveReload protocol. It gets change notifications from a LiveReload server and applies them to the browser.\n   37  \n   38: If you are **developing** a LiveReload server, see [dist/livereload.js](https://github.com/livereload/livereload-js/raw/master/dist/livereload.js) for the latest version built using the sources in this repository. We require LiveReload server vendors to distribute livereload.js as part of their apps or tools.\n   39  \n   40: An old version of this script is also bundled with the LiveReload browser extensions, but it's not getting updated and only serves for compatibility with very old clients. \n   41  \n   42  Features:\n   ..\n   57  ----------------------\n   58  \n   59: This script is published on Bower. (But, to reiterate: the preferred method is to avoid installing it altogether, and instead use the one bundled with your LiveReload server/app/tool.)\n   60  \n   61  Installation:\n   62  \n   63:     bower install livereload-js --save-dev\n   64  \n   65: This gives you a component containing a single script file, `dist/livereload.js`.\n   66  \n   67  \n   ..\n   69  -----------------------------------\n   70  \n   71: Including livereload.js into your Browserify bundle probably makes no sense, because livereload.js isn't something you would ship to production.\n   72  \n   73: But if you insist _and_ you know what you're doing, you can install LiveReload via npm:\n   74  \n   75:     npm install livereload-js --save\n   76  \n   77  and then add this to your bundle:\n   78  \n   79:     window.LiveReloadOptions = { host: 'localhost' };\n   80:     require('livereload-js');\n   81  \n   82: Note that livereload-js package uses `window` and `document` globals, so won't run under Node.js environment.\n   83  \n   84: The reason you need to specify `LiveReloadOptions` is that `livereload.js` won't be able to find its `<script>` tag and would normally bail out with an error message.\n   85  \n   86  \n   87: Using livereload.js\n   88  -------------------\n   89  \n   90  This script is meant to be included into the web pages you want to monitor, like this:\n   91  \n   92:     <script src=\"http://localhost:35729/livereload.js\"></script>\n   93  \n   94: LiveReload 2 server listens on port `35729` and serves livereload.js over HTTP (besides speaking the web socket protocol on the same port).\n   95  \n   96: A slightly smarter way is to use the host name of the current page, assuming that it is being served from the same computer. This approach enables LiveReload when viewing the web page from other devices on the network:\n   97  \n   98  ```html\n   99  <script>document.write('<script src=\"http://'\n  100      + location.host.split(':')[0]\n  101:     + ':35729/livereload.js\"></'\n  102      + 'script>')</script>\n  103  ```\n  ...\n  109  <script>document.write('<script src=\"http://'\n  110      + (location.host || 'localhost').split(':')[0]\n  111:     + ':35729/livereload.js\"></'\n  112      + 'script>')</script>\n  113  ```\n  114  \n  115  \n  116: LiveReload.js finds a `script` tag that includes `…/livereload.js` and uses it to determine the hostname/port to connect to. It also understands some options from the query string: `host`, `port`, `snipver`, `mindelay` and `maxdelay`.\n  117  \n  118  `snipver` specifies a version of the snippet, so that we can warn when the snippet needs to be updated. The currently recommended `snipver` is version 1:\n  ...\n  121  <script>document.write('<script src=\"http://'\n  122      + (location.host || 'localhost').split(':')[0]\n  123:     + ':35729/livereload.js?snipver=1\"></'\n  124      + 'script>')</script>\n  125  ```\n  ...\n  128  Additionally, you might want to specify `mindelay` and `maxdelay`, which is minimum and maximum reconnection delay in milliseconds (defaulting to `1000` and `60000`).\n  129  \n  130: Alternatively, instead of loading livereload.js from the LiveReload server, you might want to include it from a different URL. In this case, add a `host` parameter to override the host name. For example:\n  131  \n  132  ```html\n  133: <script src=\"https://github.com/livereload/livereload-js/raw/master/dist/livereload.js?host=localhost\"></script>\n  134  ```\n  135  \n  ...\n  138  -------\n  139  \n  140: Options can either be specified as query parameters of the `<script src=\"..../livereload.js\">` tag's source URL, or as a global `window.LiveReloadOptions` dictionary. If the dictionary is specified, `livereload.js` does not even try looking for its `<script>` tag.\n  141  \n  142  The set of supported options is the same for both methods:\n  143  \n  144: * `host`: the host that runs a LiveReload server; required if specifying `LiveReloadOptions`, otherwise will be autodetected as the origin of the `<script>` tag\n  145  * `port`: optional server port override\n  146: * `mindelay`, `maxdelay`: range of reconnection delays (if `livereload.js` cannot connect to the server, it will attempt to reconnect with increasing delays); defaults to 1,000 ms minimum and 60,000 ms maximum\n  147  * `handshake_timeout`: timeout for a protocol handshake to be completed after a connection attempt; mostly only needed if you're running an interactive debugger on your web socket server\n  148  \n  ...\n  151  --------------------\n  152  \n  153: **Serving livereload.js outside of the domain root.** Livereload.js expects to be served from the domain root (i.e. `http://myawesomeblog.com/livereload.js`). Serving from outside the domain root is possible, just add the `host` parameter to the `script` tag (see parameters documentation above). \n  154  \n  155  **Live reloading of imported stylesheets has a 200ms lag.** Modifying a CSS `@import` rule to reference a not-yet-cached file causes WebKit to lose all document styles, so we have to apply a workaround that causes a lag.\n  ...\n  162  \n  163  \n  164: Communicating with livereload.js\n  165  --------------------------------\n  166  \n  167: It is possible to communicate with a running LiveReload script using DOM events:\n  168  \n  169: * fire `LiveReloadShutDown` event on `document` to make LiveReload disconnect and go away\n  170: * listen for `LiveReloadConnect` event on `document` to learn when the connection is established\n  171: * listen for `LiveReloadDisconnect` event on `document` to learn when the connection is interrupted (or fails to be established)\n  172  \n  173: The `LiveReload` object is also exposed as `window.LiveReload`, with `LiveReload.disconnect()`, `LiveReload.connect()`, and `LiveReload.shutDown()` available. However, I'm not yet sure if I want to keep this API, so consider it non-contractual. (And please tell me if you have a use for it!)\n  174  \n  175  \n  ...\n  180  \n  181  \n  182: Hacking on LiveReload.js\n  183  ------------------------\n  184  \n  ...\n  224  -------\n  225  \n  226: livereload-js is available under the MIT license. See the LICENSE file for details.\n  227  \n  228  \n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/dist/livereload.js:\n   13        this.Timer = Timer;\n   14        this.handlers = handlers;\n   15:       this._uri = \"ws\" + (this.options.https ? \"s\" : \"\") + \"://\" + this.options.host + \":\" + this.options.port + \"/livereload\";\n   16        this._nextDelay = this.options.mindelay;\n   17        this._connectionDesired = false;\n   ..\n  260          link.href = this.host.generateCacheBustUrl(link.href);\n  261        }\n  262:       this.host.console.log(\"LiveReload is asking LESS to recompile all stylesheets\");\n  263        this.window.less.refresh(true);\n  264        return true;\n  ...\n  279  },{}],4:[function(require,module,exports){\n  280  (function() {\n  281:   var Connector, LiveReload, Options, Reloader, Timer,\n  282      __hasProp = {}.hasOwnProperty;\n  283  \n  ...\n  290    Reloader = require('./reloader').Reloader;\n  291  \n  292:   exports.LiveReload = LiveReload = (function() {\n  293:     function LiveReload(window) {\n  294        var k, v, _ref;\n  295        this.window = window;\n  ...\n  305        };\n  306        if (!(this.WebSocket = this.window.WebSocket || this.window.MozWebSocket)) {\n  307:         this.console.error(\"LiveReload disabled because the browser does not seem to support web sockets\");\n  308          return;\n  309        }\n  310:       if ('LiveReloadOptions' in window) {\n  311          this.options = new Options();\n  312:         _ref = window['LiveReloadOptions'];\n  313          for (k in _ref) {\n  314            if (!__hasProp.call(_ref, k)) continue;\n  ...\n  319          this.options = Options.extract(this.window.document);\n  320          if (!this.options) {\n  321:           this.console.error(\"LiveReload disabled because it could not find its own <SCRIPT> tag\");\n  322            return;\n  323          }\n  ...\n  337                _base.connect();\n  338              }\n  339:             _this.log(\"LiveReload is connected to \" + _this.options.host + \":\" + _this.options.port + \" (protocol v\" + protocol + \").\");\n  340              return _this.analyze();\n  341            };\n  ...\n  349              } else {\n  350                if (typeof console !== \"undefined\" && console !== null) {\n  351:                 return console.log(\"LiveReload internal error: \" + e.message);\n  352                }\n  353              }\n  ...\n  362              switch (reason) {\n  363                case 'cannot-connect':\n  364:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \", will retry in \" + nextDelay + \" sec.\");\n  365                case 'broken':\n  366:                 return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \", reconnecting in \" + nextDelay + \" sec.\");\n  367                case 'handshake-timeout':\n  368:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake timeout), will retry in \" + nextDelay + \" sec.\");\n  369                case 'handshake-failed':\n  370:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake failed), will retry in \" + nextDelay + \" sec.\");\n  371                case 'manual':\n  372                  break;\n  ...\n  374                  break;\n  375                default:\n  376:                 return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \" (\" + reason + \"), reconnecting in \" + nextDelay + \" sec.\");\n  377              }\n  378            };\n  ...\n  392      }\n  393  \n  394:     LiveReload.prototype.on = function(eventName, handler) {\n  395        return this.listeners[eventName] = handler;\n  396      };\n  397  \n  398:     LiveReload.prototype.log = function(message) {\n  399        return this.console.log(\"\" + message);\n  400      };\n  401  \n  402:     LiveReload.prototype.performReload = function(message) {\n  403        var _ref, _ref1;\n  404:       this.log(\"LiveReload received reload request: \" + (JSON.stringify(message, null, 2)));\n  405        return this.reloader.reload(message.path, {\n  406          liveCSS: (_ref = message.liveCSS) != null ? _ref : true,\n  ...\n  412      };\n  413  \n  414:     LiveReload.prototype.performAlert = function(message) {\n  415        return alert(message.message);\n  416      };\n  417  \n  418:     LiveReload.prototype.shutDown = function() {\n  419        var _base;\n  420        if (!this.initialized) {\n  ...\n  422        }\n  423        this.connector.disconnect();\n  424:       this.log(\"LiveReload disconnected.\");\n  425        return typeof (_base = this.listeners).shutdown === \"function\" ? _base.shutdown() : void 0;\n  426      };\n  427  \n  428:     LiveReload.prototype.hasPlugin = function(identifier) {\n  429        return !!this.pluginIdentifiers[identifier];\n  430      };\n  431  \n  432:     LiveReload.prototype.addPlugin = function(pluginClass) {\n  433        var plugin;\n  434        if (!this.initialized) {\n  ...\n  440        this.pluginIdentifiers[pluginClass.identifier] = true;\n  441        plugin = new pluginClass(this.window, {\n  442:         _livereload: this,\n  443          _reloader: this.reloader,\n  444          _connector: this.connector,\n  ...\n  455      };\n  456  \n  457:     LiveReload.prototype.analyze = function() {\n  458        var plugin, pluginData, pluginsData, _i, _len, _ref;\n  459        if (!this.initialized) {\n  ...\n  477      };\n  478  \n  479:     return LiveReload;\n  480  \n  481    })();\n  ...\n  519      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  520        element = _ref[_i];\n  521:       if ((src = element.src) && (m = src.match(/^[^:]+:\\/\\/(.*)\\/z?livereload\\.js(?:\\?(.*))?$/))) {\n  522          options = new Options();\n  523          options.https = src.indexOf(\"https\") === 0;\n  ...\n  550      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n  551  \n  552:   exports.PROTOCOL_6 = PROTOCOL_6 = 'http://livereload.com/protocols/official-6';\n  553  \n  554:   exports.PROTOCOL_7 = PROTOCOL_7 = 'http://livereload.com/protocols/official-7';\n  555  \n  556    exports.ProtocolError = ProtocolError = (function() {\n  557      function ProtocolError(reason, data) {\n  558:       this.message = \"LiveReload protocol error (\" + reason + \") after receiving data: \\\"\" + data + \"\\\".\";\n  559      }\n  560  \n  ...\n  871          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  872            link = _ref[_i];\n  873:           if (link.rel.match(/^stylesheet$/i) && !link.__LiveReload_pendingRemoval) {\n  874              _results.push(link);\n  875            }\n  ...\n  896          }\n  897        }\n  898:       this.console.log(\"LiveReload found \" + links.length + \" LINKed stylesheets, \" + imported.length + \" @imported stylesheets\");\n  899        match = pickBestMatch(path, links.concat(imported), (function(_this) {\n  900          return function(l) {\n  ...\n  904        if (match) {\n  905          if (match.object.rule) {\n  906:           this.console.log(\"LiveReload is reloading imported stylesheet: \" + match.object.href);\n  907            this.reattachImportedRule(match.object);\n  908          } else {\n  909:           this.console.log(\"LiveReload is reloading stylesheet: \" + (this.linkHref(match.object)));\n  910            this.reattachStylesheetLink(match.object);\n  911          }\n  912        } else {\n  913:         this.console.log(\"LiveReload will reload all stylesheets because path '\" + path + \"' did not match any specific one\");\n  914          for (_l = 0, _len3 = links.length; _l < _len3; _l++) {\n  915            link = links[_l];\n  ...\n  963        clone.onload = (function(_this) {\n  964          return function() {\n  965:           _this.console.log(\"LiveReload: the new stylesheet has finished loading\");\n  966            _this.knownToSupportCssOnLoad = true;\n  967            return executeCallback();\n  ...\n  972            return function() {\n  973              if (clone.sheet) {\n  974:               _this.console.log(\"LiveReload is polling until the new CSS finishes loading...\");\n  975                return executeCallback();\n  976              } else {\n  ...\n  989      Reloader.prototype.reattachStylesheetLink = function(link) {\n  990        var clone, parent;\n  991:       if (link.__LiveReload_pendingRemoval) {\n  992          return;\n  993        }\n  994:       link.__LiveReload_pendingRemoval = true;\n  995        if (link.tagName === 'STYLE') {\n  996          clone = this.document.createElement('link');\n  ...\n 1036        media = rule.media.length ? [].join.call(rule.media, ', ') : '';\n 1037        newRule = \"@import url(\\\"\" + href + \"\\\") \" + media + \";\";\n 1038:       rule.__LiveReload_newHref = href;\n 1039        tempLink = this.document.createElement(\"link\");\n 1040        tempLink.rel = 'stylesheet';\n 1041        tempLink.href = href;\n 1042:       tempLink.__LiveReload_pendingRemoval = true;\n 1043        if (link.parentNode) {\n 1044          link.parentNode.insertBefore(tempLink, link);\n ....\n 1049              tempLink.parentNode.removeChild(tempLink);\n 1050            }\n 1051:           if (rule.__LiveReload_newHref !== href) {\n 1052              return;\n 1053            }\n ....\n 1055            parent.deleteRule(index + 1);\n 1056            rule = parent.cssRules[index];\n 1057:           rule.__LiveReload_newHref = href;\n 1058            return _this.Timer.start(_this.importCacheWaitPeriod, function() {\n 1059:             if (rule.__LiveReload_newHref !== href) {\n 1060                return;\n 1061              }\n ....\n 1068  \n 1069      Reloader.prototype.generateUniqueString = function() {\n 1070:       return 'livereload=' + Date.now();\n 1071      };\n 1072  \n ....\n 1081            originalUrl = url;\n 1082            url = this.options.serverURL + this.options.overrideURL + \"?url=\" + encodeURIComponent(url);\n 1083:           this.console.log(\"LiveReload is overriding source URL \" + originalUrl + \" with \" + url);\n 1084          }\n 1085        }\n 1086:       params = oldParams.replace(/(\\?|&)livereload=(\\d+)/, function(match, sep) {\n 1087          return \"\" + sep + expando;\n 1088        });\n ....\n 1105  },{}],8:[function(require,module,exports){\n 1106  (function() {\n 1107:   var CustomEvents, LiveReload, k;\n 1108  \n 1109    CustomEvents = require('./customevents');\n 1110  \n 1111:   LiveReload = window.LiveReload = new (require('./livereload').LiveReload)(window);\n 1112  \n 1113    for (k in window) {\n 1114:     if (k.match(/^LiveReloadPlugin/)) {\n 1115:       LiveReload.addPlugin(window[k]);\n 1116      }\n 1117    }\n 1118  \n 1119:   LiveReload.addPlugin(require('./less'));\n 1120  \n 1121:   LiveReload.on('shutdown', function() {\n 1122:     return delete window.LiveReload;\n 1123    });\n 1124  \n 1125:   LiveReload.on('connect', function() {\n 1126:     return CustomEvents.fire(document, 'LiveReloadConnect');\n 1127    });\n 1128  \n 1129:   LiveReload.on('disconnect', function() {\n 1130:     return CustomEvents.fire(document, 'LiveReloadDisconnect');\n 1131    });\n 1132  \n 1133:   CustomEvents.bind(document, 'LiveReloadShutDown', function() {\n 1134:     return LiveReload.shutDown();\n 1135    });\n 1136  \n 1137  }).call(this);\n 1138  \n 1139: },{\"./customevents\":2,\"./less\":3,\"./livereload\":4}],9:[function(require,module,exports){\n 1140  (function() {\n 1141    var Timer;\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/connector.js:\n   12        this.Timer = Timer;\n   13        this.handlers = handlers;\n   14:       this._uri = \"ws\" + (this.options.https ? \"s\" : \"\") + \"://\" + this.options.host + \":\" + this.options.port + \"/livereload\";\n   15        this._nextDelay = this.options.mindelay;\n   16        this._connectionDesired = false;\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/less.js:\n   45          link.href = this.host.generateCacheBustUrl(link.href);\n   46        }\n   47:       this.host.console.log(\"LiveReload is asking LESS to recompile all stylesheets\");\n   48        this.window.less.refresh(true);\n   49        return true;\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/livereload.js:\n    1  (function() {\n    2:   var Connector, LiveReload, Options, Reloader, Timer,\n    3      __hasProp = {}.hasOwnProperty;\n    4  \n    .\n   11    Reloader = require('./reloader').Reloader;\n   12  \n   13:   exports.LiveReload = LiveReload = (function() {\n   14:     function LiveReload(window) {\n   15        var k, v, _ref;\n   16        this.window = window;\n   ..\n   26        };\n   27        if (!(this.WebSocket = this.window.WebSocket || this.window.MozWebSocket)) {\n   28:         this.console.error(\"LiveReload disabled because the browser does not seem to support web sockets\");\n   29          return;\n   30        }\n   31:       if ('LiveReloadOptions' in window) {\n   32          this.options = new Options();\n   33:         _ref = window['LiveReloadOptions'];\n   34          for (k in _ref) {\n   35            if (!__hasProp.call(_ref, k)) continue;\n   ..\n   40          this.options = Options.extract(this.window.document);\n   41          if (!this.options) {\n   42:           this.console.error(\"LiveReload disabled because it could not find its own <SCRIPT> tag\");\n   43            return;\n   44          }\n   ..\n   58                _base.connect();\n   59              }\n   60:             _this.log(\"LiveReload is connected to \" + _this.options.host + \":\" + _this.options.port + \" (protocol v\" + protocol + \").\");\n   61              return _this.analyze();\n   62            };\n   ..\n   70              } else {\n   71                if (typeof console !== \"undefined\" && console !== null) {\n   72:                 return console.log(\"LiveReload internal error: \" + e.message);\n   73                }\n   74              }\n   ..\n   83              switch (reason) {\n   84                case 'cannot-connect':\n   85:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \", will retry in \" + nextDelay + \" sec.\");\n   86                case 'broken':\n   87:                 return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \", reconnecting in \" + nextDelay + \" sec.\");\n   88                case 'handshake-timeout':\n   89:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake timeout), will retry in \" + nextDelay + \" sec.\");\n   90                case 'handshake-failed':\n   91:                 return _this.log(\"LiveReload cannot connect to \" + _this.options.host + \":\" + _this.options.port + \" (handshake failed), will retry in \" + nextDelay + \" sec.\");\n   92                case 'manual':\n   93                  break;\n   ..\n   95                  break;\n   96                default:\n   97:                 return _this.log(\"LiveReload disconnected from \" + _this.options.host + \":\" + _this.options.port + \" (\" + reason + \"), reconnecting in \" + nextDelay + \" sec.\");\n   98              }\n   99            };\n  ...\n  113      }\n  114  \n  115:     LiveReload.prototype.on = function(eventName, handler) {\n  116        return this.listeners[eventName] = handler;\n  117      };\n  118  \n  119:     LiveReload.prototype.log = function(message) {\n  120        return this.console.log(\"\" + message);\n  121      };\n  122  \n  123:     LiveReload.prototype.performReload = function(message) {\n  124        var _ref, _ref1;\n  125:       this.log(\"LiveReload received reload request: \" + (JSON.stringify(message, null, 2)));\n  126        return this.reloader.reload(message.path, {\n  127          liveCSS: (_ref = message.liveCSS) != null ? _ref : true,\n  ...\n  133      };\n  134  \n  135:     LiveReload.prototype.performAlert = function(message) {\n  136        return alert(message.message);\n  137      };\n  138  \n  139:     LiveReload.prototype.shutDown = function() {\n  140        var _base;\n  141        if (!this.initialized) {\n  ...\n  143        }\n  144        this.connector.disconnect();\n  145:       this.log(\"LiveReload disconnected.\");\n  146        return typeof (_base = this.listeners).shutdown === \"function\" ? _base.shutdown() : void 0;\n  147      };\n  148  \n  149:     LiveReload.prototype.hasPlugin = function(identifier) {\n  150        return !!this.pluginIdentifiers[identifier];\n  151      };\n  152  \n  153:     LiveReload.prototype.addPlugin = function(pluginClass) {\n  154        var plugin;\n  155        if (!this.initialized) {\n  ...\n  161        this.pluginIdentifiers[pluginClass.identifier] = true;\n  162        plugin = new pluginClass(this.window, {\n  163:         _livereload: this,\n  164          _reloader: this.reloader,\n  165          _connector: this.connector,\n  ...\n  176      };\n  177  \n  178:     LiveReload.prototype.analyze = function() {\n  179        var plugin, pluginData, pluginsData, _i, _len, _ref;\n  180        if (!this.initialized) {\n  ...\n  198      };\n  199  \n  200:     return LiveReload;\n  201  \n  202    })();\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/options.js:\n   34      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n   35        element = _ref[_i];\n   36:       if ((src = element.src) && (m = src.match(/^[^:]+:\\/\\/(.*)\\/z?livereload\\.js(?:\\?(.*))?$/))) {\n   37          options = new Options();\n   38          options.https = src.indexOf(\"https\") === 0;\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/protocol.js:\n    3      __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n    4  \n    5:   exports.PROTOCOL_6 = PROTOCOL_6 = 'http://livereload.com/protocols/official-6';\n    6  \n    7:   exports.PROTOCOL_7 = PROTOCOL_7 = 'http://livereload.com/protocols/official-7';\n    8  \n    9    exports.ProtocolError = ProtocolError = (function() {\n   10      function ProtocolError(reason, data) {\n   11:       this.message = \"LiveReload protocol error (\" + reason + \") after receiving data: \\\"\" + data + \"\\\".\";\n   12      }\n   13  \n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/reloader.js:\n  227          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  228            link = _ref[_i];\n  229:           if (link.rel.match(/^stylesheet$/i) && !link.__LiveReload_pendingRemoval) {\n  230              _results.push(link);\n  231            }\n  ...\n  252          }\n  253        }\n  254:       this.console.log(\"LiveReload found \" + links.length + \" LINKed stylesheets, \" + imported.length + \" @imported stylesheets\");\n  255        match = pickBestMatch(path, links.concat(imported), (function(_this) {\n  256          return function(l) {\n  ...\n  260        if (match) {\n  261          if (match.object.rule) {\n  262:           this.console.log(\"LiveReload is reloading imported stylesheet: \" + match.object.href);\n  263            this.reattachImportedRule(match.object);\n  264          } else {\n  265:           this.console.log(\"LiveReload is reloading stylesheet: \" + (this.linkHref(match.object)));\n  266            this.reattachStylesheetLink(match.object);\n  267          }\n  268        } else {\n  269:         this.console.log(\"LiveReload will reload all stylesheets because path '\" + path + \"' did not match any specific one\");\n  270          for (_l = 0, _len3 = links.length; _l < _len3; _l++) {\n  271            link = links[_l];\n  ...\n  319        clone.onload = (function(_this) {\n  320          return function() {\n  321:           _this.console.log(\"LiveReload: the new stylesheet has finished loading\");\n  322            _this.knownToSupportCssOnLoad = true;\n  323            return executeCallback();\n  ...\n  328            return function() {\n  329              if (clone.sheet) {\n  330:               _this.console.log(\"LiveReload is polling until the new CSS finishes loading...\");\n  331                return executeCallback();\n  332              } else {\n  ...\n  345      Reloader.prototype.reattachStylesheetLink = function(link) {\n  346        var clone, parent;\n  347:       if (link.__LiveReload_pendingRemoval) {\n  348          return;\n  349        }\n  350:       link.__LiveReload_pendingRemoval = true;\n  351        if (link.tagName === 'STYLE') {\n  352          clone = this.document.createElement('link');\n  ...\n  392        media = rule.media.length ? [].join.call(rule.media, ', ') : '';\n  393        newRule = \"@import url(\\\"\" + href + \"\\\") \" + media + \";\";\n  394:       rule.__LiveReload_newHref = href;\n  395        tempLink = this.document.createElement(\"link\");\n  396        tempLink.rel = 'stylesheet';\n  397        tempLink.href = href;\n  398:       tempLink.__LiveReload_pendingRemoval = true;\n  399        if (link.parentNode) {\n  400          link.parentNode.insertBefore(tempLink, link);\n  ...\n  405              tempLink.parentNode.removeChild(tempLink);\n  406            }\n  407:           if (rule.__LiveReload_newHref !== href) {\n  408              return;\n  409            }\n  ...\n  411            parent.deleteRule(index + 1);\n  412            rule = parent.cssRules[index];\n  413:           rule.__LiveReload_newHref = href;\n  414            return _this.Timer.start(_this.importCacheWaitPeriod, function() {\n  415:             if (rule.__LiveReload_newHref !== href) {\n  416                return;\n  417              }\n  ...\n  424  \n  425      Reloader.prototype.generateUniqueString = function() {\n  426:       return 'livereload=' + Date.now();\n  427      };\n  428  \n  ...\n  437            originalUrl = url;\n  438            url = this.options.serverURL + this.options.overrideURL + \"?url=\" + encodeURIComponent(url);\n  439:           this.console.log(\"LiveReload is overriding source URL \" + originalUrl + \" with \" + url);\n  440          }\n  441        }\n  442:       params = oldParams.replace(/(\\?|&)livereload=(\\d+)/, function(match, sep) {\n  443          return \"\" + sep + expando;\n  444        });\n\n/Users/my8bit/Public/avers/jade/avers/node_modules/livereload-js/lib/startup.js:\n    1  (function() {\n    2:   var CustomEvents, LiveReload, k;\n    3  \n    4    CustomEvents = require('./customevents');\n    5  \n    6:   LiveReload = window.LiveReload = new (require('./livereload').LiveReload)(window);\n    7  \n    8    for (k in window) {\n    9:     if (k.match(/^LiveReloadPlugin/)) {\n   10:       LiveReload.addPlugin(window[k]);\n   11      }\n   12    }\n   13  \n   14:   LiveReload.addPlugin(require('./less'));\n   15  \n   16:   LiveReload.on('shutdown', function() {\n   17:     return delete window.LiveReload;\n   18    });\n   19  \n   20:   LiveReload.on('connect', function() {\n   21:     return CustomEvents.fire(document, 'LiveReloadConnect');\n   22    });\n   23  \n   24:   LiveReload.on('disconnect', function() {\n   25:     return CustomEvents.fire(document, 'LiveReloadDisconnect');\n   26    });\n   27  \n   28:   CustomEvents.bind(document, 'LiveReloadShutDown', function() {\n   29:     return LiveReload.shutDown();\n   30    });\n   31  \n\n/Users/my8bit/Public/avers/jade/avers/src/scripts.jade:\n    3  script(src='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js')\n    4  script(src='js/helper.js')\n    5: script(src='//localhost:35729/livereload.js')\n    6  \n\n505 matches across 34 files\n",
			"settings":
			{
				"buffer_size": 79174,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/kontakti.jade",
			"settings":
			{
				"buffer_size": 1220,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/js/google-features.js",
			"settings":
			{
				"buffer_size": 395,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/js/helper.js",
			"settings":
			{
				"buffer_size": 1435,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "1 Зачем нужен сайт?\n2 Оценка коверсии. Как вы о нас узнали?\n2 Почему покупатель должен покупать у нас?\n7 основных причин стать клиентом СК \"СРЕДА\": \nу нас будет 10 !! :-)\n3 Отличительные особенности дома?\n4 Проекты бань.\n5 Почему надо сотрудничать       именно с нами?\n6 Броский текст пример\n\nТолько у нас МАКСИМАЛЬНАЯ комплектация за умеренную цену! \n_____________________________________ \n\nНИКАКИХ ДОПЛАТ!\nПосле завершения строительства, дом пригоден для проживания.\n\nhttp://www.dom-legko.narod.ru/Gotov-proekt.html\n\n7 Проект дома внутри чертежи в низком качестве сборочные для наглядности\n8 Более качественный фотоснимкию Больше фотосимков\n9 А свой проект?\n10 Кровля пол и т.д. Лучшие материалы цена\\\n11 принцыпы работы - важно. Кто- мы??!\nпример\nhttp://doma-legko.ru/frontpage\n\n12 Какие гаранти туда-же\n13 График сроительства Этапы и строки здачи в эксплуатаци. Рассчитать приблизительно!!\n\nпример - http://inkeridom.ru/price/#price-fundamenta\n\n14 Туда-же рассчетс стоимость работ\n\n14 Есть ли 3д модель покрутить повертеть - для еффектности\n15 Порядок оформлени заказа\nпример\nhttp://sk-plotnik.ru/s/poryadok-oformleniya-zakaza\n16 Мы вам перезвоним? Надо?\n17 под усадку под ключ??\n18 Пользуетесь почтой? Все предложения и замечания вышлю туда отсортирую по приоритету\n19 Приглашение на стройку??\nпример\nhttp://www.keilstroy.ru/Dop-Info/Priglashenie-Na-Stroiku/\n\nВопросы и ответы, отзывы в контакте фейсбуке ответы там-же\n\n20 Расписать детально цены. Клиенты понмиают за что платят\nпример\nhttp://www.keilstroy.ru/Tseny/Tseny-Na-Stroitelstvo/Tseny-Na-Doma-iz-Profilirovannogo-Brusa/\n\n",
			"settings":
			{
				"buffer_size": 1585,
				"line_ending": "Unix",
				"name": "1 Зачем нужен сайт?"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 287.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"bea",
				"HTMLBeautify"
			],
			[
				"toggs",
				"View: Toggle Side Bar"
			],
			[
				"packin",
				"Package Control: Install Package"
			],
			[
				"beaut",
				"HTMLBeautify"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"vi",
				"View In Browser"
			],
			[
				"view",
				"View In Browser"
			],
			[
				"packins",
				"Package Control: Install Package"
			],
			[
				"packre",
				"Package Control: Remove Package"
			],
			[
				"reloa",
				"Emmet: Reload Extensions"
			],
			[
				"emmetlive",
				"Emmet: Select Previous Item"
			],
			[
				"reload",
				"Emmet: Reload Extensions"
			],
			[
				"togg",
				"View: Toggle Side Bar"
			],
			[
				"git ",
				"GitGutter: Compare Against Commit"
			],
			[
				"gutt",
				"GitGutter: Show Comparing Against"
			],
			[
				"toggsi",
				"View: Toggle Side Bar"
			],
			[
				"glu",
				"Glue - Launch"
			],
			[
				"glue",
				"Glue - Launch"
			],
			[
				"npm",
				"npm: Install and Save Development Package"
			],
			[
				"togsi",
				"View: Toggle Side Bar"
			],
			[
				"sch",
				"Validate Schema"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"jshi",
				"JSHint: Set `node` Path"
			],
			[
				"hint",
				"JSHint"
			],
			[
				"chema",
				"Validate Schema"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/my8bit/Public/avers/jade/avers",
		"/Users/my8bit/Public/avers/jade/avers/build",
		"/Users/my8bit/Public/avers/jade/avers/build/js",
		"/Users/my8bit/Public/avers/jade/avers/src",
		"/Users/my8bit/Public/avers/jade/avers/src/js"
	],
	"file_history":
	[
		"/Users/my8bit/Public/avers/jade/avers/Gruntfile.js",
		"/Users/my8bit/Public/avers/jade/avers/build/js/helper.js",
		"/Users/my8bit/Public/avers/jade/avers/src/footer.jade",
		"/Users/my8bit/Pictures/index.html",
		"/Users/my8bit/Public/avers/jade/avers/src/scripts.jade",
		"/Users/my8bit/Public/avers/jade/avers/build/js/google-features.js",
		"/Users/my8bit/Public/avers/jade/avers/src/garantii.jade",
		"/Users/my8bit/Public/avers/jade/avers/src/obustroistvo.jade",
		"/Users/my8bit/Public/avers/jade/avers/package.json",
		"/Users/my8bit/Public/avers/jade/avers/build/experimental.coffee",
		"/Users/my8bit/Public/avers/jade/avers/.ftppass",
		"/Users/my8bit/Public/avers/jade/avers/src/layout.jade",
		"/Users/my8bit/Public/avers/jade/avers/src/js/helper.js",
		"/Users/my8bit/Public/avers/jade/avers/build/kontakti.html",
		"/Users/my8bit/Public/avers/jade/avers/build/index.html",
		"/Users/my8bit/Public/avers/index.html",
		"/Users/my8bit/Public/avers/bindex.html",
		"/Users/my8bit/Public/avers/jade/header.jade",
		"/Users/my8bit/Public/avers/helper.js",
		"/Users/my8bit/Public/avers/jade/kontakti.jade.html",
		"/Users/my8bit/Public/avers/jade/index.jade",
		"/Users/my8bit/Public/avers/jade/layout.jade",
		"/Users/my8bit/Public/avers/jade/scripts.jade",
		"/Users/my8bit/Public/avers/jade/navigation.html",
		"/Users/my8bit/Public/avers/jade/layout.html",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/my8bit/Public/avers/jade/navigation.jade",
		"/Users/my8bit/.ssh/bitbucket.pub",
		"/Users/my8bit/Public/avers.html",
		"/Users/my8bit/Public/helper.js",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/User/View In Browser.sublime-settings",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/View In Browser/View In Browser.sublime-settings",
		"/Users/my8bit/Downloads/jsbin.haporuripi.1.html",
		"/Users/my8bit/github/firebase/backfire/index.html",
		"/Users/my8bit/Downloads/8znkj.gif",
		"/Users/my8bit/index.html",
		"/Users/my8bit/css",
		"/Volumes/CLOVER/EFI/CLOVER/config.plist",
		"/Volumes/EFI/EFI/CLOVER/config.plist",
		"/Users/my8bit/github/cv/_config.yml",
		"/Users/my8bit/github/cv/css/main.scss",
		"/Users/my8bit/github/cv/_sass/_resume.scss",
		"/Users/my8bit/Documents/snippet_hacker3.js",
		"/Users/my8bit/Documents/snippet_hacker2.js",
		"/Users/my8bit/github/cv/_layouts/resume.html",
		"/Users/my8bit/Documents/snippet_hacker.js",
		"/Users/my8bit/github/cv/_sass/_mixins.scss",
		"/Users/my8bit/github/cv/_includes/icon-links.html",
		"/Users/my8bit/Dropbox/navigate.js",
		"/Users/my8bit/Desktop/AppleIntelSNBGraphicsFB.kext/Contents/Info.plist",
		"/System/Library/Extensions/AppleIntelFramebufferCapri.kext/Contents/Info.plist",
		"/System/Library/Extensions/AppleIntelSNBGraphicsFB.kext/Contents/Info.plist",
		"/Users/my8bit/AppleIntelFramebufferCapri.kext/Contents/Info.plist",
		"/Users/my8bit/Documents/divshot/cardbord-co-ua/style3.css",
		"/Users/my8bit/Documents/divshot/cardbord-co-ua/index.html",
		"/Volumes/LinuxHome/my8bit/Downloads/resume-cli-master/resume.json",
		"/System/Library/Extensions/VoodooHDA.kext/Contents/Info.plist",
		"/Users/my8bit/Library/Preferences/VoodooHDA.settings.plist",
		"/Volumes/LinuxHome/my8bit/Downloads/VoodooHdaSettingsLoader.app/Contents/Resources/en.lproj/InfoPlist.strings",
		"/Users/my8bit/Library/Preferences/VoodooHDA.settings",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/User/GitGutter.sublime-settings",
		"/Users/my8bit/Documents/divshot/cardbord-co-ua/css/styles.css",
		"/Users/my8bit/nano.save",
		"/Users/my8bit/.zshrc",
		"/Users/my8bit/spring-rest-black-market/src/main/resources/static/package.json",
		"/Users/my8bit/spring-rest-black-market/src/main/resources/static/Gruntfile.js",
		"/Volumes/EFI/EFI/CLOVER/config.plist.broken",
		"/Volumes/EFI/EFI/BOOT/BOOTX64.efi",
		"/Users/my8bit/Documents/server.js",
		"/Users/my8bit/Documents/smsggate/server.js",
		"/Users/my8bit/node_modules/backform/package.json",
		"/Users/my8bit/node_modules/backform/src/backform.js",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome_1/Gruntfile.js",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome_1/package.json",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/Glue/Glue.sublime-settings",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/User/Glue.sublime-settings",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/kei",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/test/functionalChrome.test.js",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/package.json",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/node_modules/grunt-crx/README.md",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/test/testHelper.js",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/manifest.json",
		"/Users/my8bit/Documents/keyboard-navigation-for-chrome/node_modules/grunt-crx/lib/crx.js",
		"/Users/my8bit/Library/Application Support/Sublime Text 3/Packages/JSHint Gutter/JSHint.sublime-settings",
		"/Users/my8bit/Documents/resume.json",
		"/Volumes/WINDOWS/p1a5f9f475hr89ss35t9fqejco@group.calendar.google.c",
		"/Users/my8bit/Downloads/external-bundles/node_modules/grunt/node_modules/findup-sync/node_modules/lodash/vendor/tar/lib/header.js",
		"/System/Library/Filesystems/fuse-ext2.fs/fuse-ext2.util",
		"/Users/my8bit/Documents/index.html",
		"/Users/my8bit/Documents/backbone-tutorial.html"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"empty",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"livereload",
			"с С",
			"с",
			"с ",
			"extends ./layout.jade\n\nblock content \n  div.row\n    div.col-md-6\n      h5 Примеры построенных домов:\n      div(data-ride=\"carousel\")#carousel-example-generic.carousel.slide\n        ol.carousel-indicators\n          li(data-target=\"#carousel-example-generic\" data-slide-to=\"0\").active\n          li(data-target=\"#carousel-example-generic\" data-slide-to=\"1\")\n          li(data-target=\"#carousel-example-generic\" data-slide-to=\"2\")\n        div(role=\"listbox\").carousel-inner\n          div.carousel-item.active\n            img(src=\"img/bania.jpg\")\n            div.carousel-caption\n              h5 Баня\n              p от 99 000 руб.\n          div.carousel-item\n            img(src=\"img/besedka.jpg\")\n            div.carousel-caption\n              h5 Беседка\n              p от 99 000 руб.\n          div.carousel-item\n            img(src=\"img/srub-ocilindrovanogo-brevna.jpg\")\n            div.carousel-caption\n              h5 Сруб\n              p от 99 000 руб.\n\n    div.col-md-6\n      h5#who Кто мы:\n      p Компания «Аверс» специализируется на коттеджном строительстве в Санкт-Петербурге и Ленинградской области. На протяжении времени существования мы наработали огромный опыт в стоительстве и обсутройстве домов. Мы дородим своей репутацией на рынке.\n      h5#what Что мы делаем:\n      p Компания «Аверс», более 15 лет, профессионально занимается коттеджным строительством и строительными работами в Санкт-Петербурге и Ленинградской области.\n      h5#why Почему выбирают нас:\n      p\n        ul\n          li\n            h5 Нам доверяют.\n            p Мы работаем на рынке с 2000 года и имем хорошую репутацию у наших клиентов. Часто к нам обращаются люди, которые уже имели с нами дело... Мы ценим и дорожим вашим доверием.\n          li\n            h5 Цена\n            p Мы стараемся находить оптимальный ценовой компромисс, не неся урон в качестве. На поверенные материалы мы даем гарантию...\n          li\n            h5 Заголовок\n            p Текст\n          li\n            h5 Заголовок\n            p Текст\n\n      h5#guarantee Какие гарантии мы предоставляем:\n      p Компания «Аверс», более 15 лет, профессионально занимается коттеджным строительством и строительными работами в Санкт-Петербурге и Ленинградской области.\n      \n  div.row\n    h3 Примеры наших услуг:\n    div.col-sm-12\n      ul(role=\"tablist\")#myTab.nav.nav-tabs\n        li.nav-item\n          a(href=\"#schitovoi-dom\" role=\"tab\" data-toggle=\"tab\" aria-controls=\"schitovoi-dom\").nav-link.avtive Щитовой дом\n        li.nav-item\n          a(href=\"#karkasnij-dom\" role=\"tab\" data-toggle=\"tab\" aria-controls=\"karkasnij-dom\").nav-link Каркасный дом\n        li.nav-item\n          a(href=\"#srub\" role=\"tab\" data-toggle=\"tab\" aria-controls=\"messagesMessages\").nav-link Сруб из оцилиндрованного бревна\n        li.nav-item\n          a(href=\"#bani\" role=\"tab\" data-toggle=\"tab\" aria-controls=\"settings\").nav-link Бани\n        li.nav-item\n          a(href=\"#besedki\" role=\"tab\" data-toggle=\"tab\" aria-controls=\"settings\").nav-link Беседки\n      div.tab-content\n        div(role=\"tabpanel\")#schitovoi-dom.tab-pane.active\n          div.media\n            div.media-left\n              img(src=\"img/schitovoi-dom.jpg\")\n            div.media-body\n              h4 Щитовой дом\n              | Щитовой дом представляет собой комплект готовых панелей, из которых в минимальные сроки (3-5 дней) может быть собран \"под ключ\" полностью отделанный красивый жилой дом. Размеры и планировка дома могут быть практически любыми. Стоимость сборного щитового дома, построенного по одному из предполагаемых типовых проектов, почти не отличается от стоимости строительства по индивидуальному проекту заказчика. Дом может быть доставлен заказчику в виде готового к сборке комплекта либо установлен на подготовленную заказчиком фундамент площадку (фундамент). Стоимость сборки щитового дома составляет примерно 30% от его цены. Щитовой дом очень легко планировать. Это касается и общей планировки, и планировки отдельных помещений, определения места для окон и дверей. Кроме того, можно целенаправленно варьировать утепление дома в зависимости от ваших потребностей. Мы предлагаем два вида щитовых домов, один из которых для круглогодичного проживания, а другой для сезонного (более дешевый).\n        div(role=\"tabpanel\")#karkasnij-dom.tab-pane\n          div.media\n            div.media-left\n              img(src=\"//аверс-строй.рф/media/k2/items/cache/7293a47c0f4cdddd46ff10bcf3d23287_L.jpg\" height=\"50%\" width=\"50%\")\n          div.media-body\n            h4 Каркасный дом\n            | Достаточно легки и не требуют массивных фундаментов, что еще более сокращает стоимость строительства. Отсутствие усадки позволяет производить внутреннюю отделку каркасного дома сразу после строительства. Хозяин такого дома может оставить каркасный дом без отопления зимой и не бояться за состояние внутренней отделки. Более низкая цена каркасного дома по сравнению с домами с аналогичными теплотехническими характеристиками достигается благодаря использованию современных теплоизоляционных материалов. Долговечность конструкции каркасного дома достигается за счет обработки и скрытого размещения каркаса. Каркасно-щитовые дома позволяют использовать для своей отделки большую гамму материалов, как для внутренней, так и для внешней отделки, таких как: Сайдин (виниловая вагонка), вагонка, штукатурка с покраской т. д.\n        div(role=\"tabpanel\")#srub.tab-pane\n          div.media\n            div.media-left\n              img(src=\"//аверс-строй.рф/media/k2/items/cache/cf4507ae4969876df39b5f798b6f40ce_L.jpg\" height=\"50%\" width=\"50%\")\n          div.media-body\n            h4 Сруб из оцилиндрованного бревна\n            | Сруб из оцилиндрованного бревна - основа современного деревянного дома. Достоинством дома из оцилиндрованного бревна является, то, что все бревна, из которых осуществляется сборка, имеют четкие геометрические параметры. Это позволяет достичь плотного соединения между ними и получить эстетическую красоту природного материала в готовом строении. Высокая точность изготовления позволяет избежать характерного для обычных бревен чередования в обязательной последовательности комель к вершине и их кропотливой подгонки друг к другу. Оцилиндрованное бревно - технологичный материал и требует минимум ручного труда при строительстве дома, так как собирается на манер конструктора. Все необходимые для этого операции выполняются на заводе, в частности выбор в бревне монтажных чашек и посадочного паза. Дома из оцилиндрованного бревна не требуют дополнительной отделки, а современные антисептирующие и лакокрасочные покрытия позволяют надолго сохранить первозданный вид дома.\n        div(role=\"tabpanel\")#bani.tab-pane\n          div.media\n            div.media-left\n              img(src=\"//аверс-строй.рф/media/k2/items/cache/ee68a9df1200997b07be8fb0bbdb9f29_L.jpg\" height=\"50%\" width=\"50%\")\n          div.media-body\n            h4 Бани\n            | Самый верный способ получить хорошую баню - доверить её строительство профессионалам! Вам нравиться у себя на даче?. Вы бываете там как только удается выбраться из душного города?Но ка же может быть настоящая дача достойна вашего внимания если не хватает главной детали!? Что же это за деталь? Конечно это Баня!  День подходит к концу, вы вытираете пот с лица, из трубы струится дым, каменка в парилке раскалилась, спина зудит – веники ждут… Вы специально оттягиваете сладостный момент, надо приготовить чистую одежду, проверить, охладилось ли пиво…  Через час Вы на веранде, тело расслаблено, пар столбом… хорошо… В общем баня это очень классно, а лучше нас никто вам её не построит. Так что обращайтесь, звоните, приходите и будьте счастливы!\n        div(role=\"tabpanel\")#besedki.tab-pane\n          div.media-object-section\n            div.media-left\n              img(src=\"//аверс-строй.рф/media/k2/items/cache/ce7646a74c54cecf1c05442c71f02147_L.jpg\" height=\"50%\" width=\"50%\")\n          div.media-body\n            h4 Беседки\n            |  В наше время любой уважающий себя хозяин загородного дома для создания уюта и комфорта на участке хочет обзавестись приятным дополнением к даче - беседкой. Ведь свежий воздух так необходим каждому человеку, и что может быть лучше чем в приятный день посидеть на своей беседке! Наша компания занимается изготовлением беседок любой формы и сложности, небольшие и отлично вписывающиеся сооружения подойдут любому дачнику. А также вы можете поставить крытую беседку или уютный гриль домик в котором так собираться с друзьями и близкими людьми!\n",
			"          li\n            h5 Заголовок\n            p Текст\n          li\n            h5 Заголовок\n            p Текст\n",
			" aria-expanded",
			"#schitovoi-dom",
			"div.carousel-item",
			"400px",
			"g\"",
			"strong",
			"/modules/mod_slideshow3/image.php?width=740&height=340&cropratio=16:9&image=/",
			"/modules/mod_slideshow3/image.php?width=740&height=340&cropratio=16:9&image=/media/k2/items/src/ee68a9df1200997b07be8fb0bbdb9f29.jpg",
			"аверс-строй.рф/modules/mod_slideshow3/image.php?width=740&height=340&cropratio=16:9&image=/media/k2/items/src/ee68a9df1200997b07be8fb0bbdb9f29.jpg",
			"\"Аверс\"",
			"\"Аверс\", более 15 лет, профессионально занимается коттеджным строительством и строительными работами в Санкт-Петербурге и Ленинградской обла",
			"года",
			"kontakti",
			"\"]\n",
			"-object-section",
			"thumbnail",
			"        div(role=\"tabpanel\")#messages.tab-pane\n          div.media-object-section\n            div.thumbnail\n              img(src=\"//аверс-строй.рф/media/k2/items/cache/ee68a9df1200997b07be8fb0bbdb9f29_L.jpg\" height=\"50%\" width=\"50%\")\n          div.media-object-section\n            h4 Бани\n            | Сруб из оцилиндрованного бревна - основа современного деревянного дома. Достоинством дома из оцилиндрованного бревна является, то, что все бревна, из которых осуществляется сборка, имеют четкие геометрические параметры. Это позволяет достичь плотного соединения между ними и получить эстетическую красоту природного материала в готовом строении. Высокая точность изготовления позволяет избежать характерного для обычных бревен чередования в обязательной последовательности комель к вершине и их кропотливой подгонки друг к другу. Оцилиндрованное бревно - технологичный материал и требует минимум ручного труда при строительстве дома, так как собирается на манер конструктора. Все необходимые для этого операции выполняются на заводе, в частности выбор в бревне монтажных чашек и посадочного паза. Дома из оцилиндрованного бревна не требуют дополнительной отделки, а современные антисептирующие и лакокрасочные покрытия позволяют надолго сохранить первозданный вид дома.",
			"')\n",
			"#profile",
			"profile",
			"'",
			"h4",
			"h3",
			"')\n",
			"<img",
			"<h4>",
			"<div class=\"media-",
			"<div class=\"me",
			"<div class=\"thumb",
			"<div role=\"tabpanel\"",
			"a.n",
			"href=\"",
			"<a",
			"\">",
			" class=\"",
			"<l",
			"</li>",
			"<",
			"></li>",
			"data-",
			"pathname",
			" ",
			"\"#",
			").",
			"f=",
			"href=",
			"\">",
			" class=\"",
			"<",
			"</a>",
			"bold",
			"h4",
			"class=\"tab-pane",
			"a ",
			"li ",
			"tabs-panel",
			"panel5",
			"panel4",
			"panel3",
			"panel2",
			"panel1",
			"a h",
			"\n    ",
			"кто ",
			"class=\"row\"",
			"row",
			"звоните",
			">\n",
			"h5",
			">\n",
			"><",
			"https",
			"centerMeVertically",
			">\n",
			"style=\"lin",
			"ajax",
			"<label",
			".title-bar",
			"@include section_border;",
			"section_border",
			"header-title",
			"disp",
			"        <p class=\"footer-line\">Modified from <a href=\"http://twitter.com/jglovier\">@jglovier</a> fork.</p>\n",
			"skills",
			"h5",
			"5",
			"class=\"resume-item-details\"",
			"resume-item-copy",
			"sans_bold",
			"font-weight",
			"resume",
			"<li>",
			" ",
			"Implementing",
			"icon-link",
			"resume_instagram_url",
			"contact-button",
			"0x01668086",
			"0166",
			"808",
			"116",
			"sleep",
			"dst",
			";\n",
			"2px",
			"border",
			"wid",
			"    <",
			"\",\n",
			"plug",
			"large",
			"\"));\n",
			");\n",
			"inputDate",
			"'),\n",
			");\n",
			"5",
			"	<",
			">\n",
			"350",
			"}\n",
			"scale"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/index.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8452,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 402.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "build/css/custom.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 195,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/navigation.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 721,
						"regions":
						{
						},
						"selection":
						[
							[
								709,
								721
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/header.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1024,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/layout.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 436,
						"regions":
						{
						},
						"selection":
						[
							[
								279,
								279
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/scripts.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 276,
						"regions":
						{
						},
						"selection":
						[
							[
								260,
								270
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 79174,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										166,
										176
									],
									[
										512,
										522
									],
									[
										834,
										844
									],
									[
										1159,
										1169
									],
									[
										1481,
										1491
									],
									[
										1806,
										1816
									],
									[
										2117,
										2127
									],
									[
										2357,
										2367
									],
									[
										2587,
										2597
									],
									[
										2758,
										2768
									],
									[
										2771,
										2781
									],
									[
										2818,
										2828
									],
									[
										3050,
										3060
									],
									[
										3186,
										3196
									],
									[
										3293,
										3303
									],
									[
										3552,
										3562
									],
									[
										3759,
										3769
									],
									[
										4092,
										4102
									],
									[
										4307,
										4317
									],
									[
										4508,
										4518
									],
									[
										4722,
										4732
									],
									[
										4953,
										4963
									],
									[
										5269,
										5279
									],
									[
										5491,
										5501
									],
									[
										5638,
										5648
									],
									[
										5770,
										5780
									],
									[
										5880,
										5890
									],
									[
										6125,
										6135
									],
									[
										6258,
										6268
									],
									[
										6451,
										6461
									],
									[
										6617,
										6627
									],
									[
										6764,
										6774
									],
									[
										7027,
										7037
									],
									[
										7168,
										7178
									],
									[
										7362,
										7372
									],
									[
										7574,
										7584
									],
									[
										7933,
										7943
									],
									[
										8030,
										8040
									],
									[
										8218,
										8228
									],
									[
										8495,
										8505
									],
									[
										8652,
										8662
									],
									[
										8986,
										8996
									],
									[
										9172,
										9182
									],
									[
										9376,
										9386
									],
									[
										9706,
										9716
									],
									[
										9980,
										9990
									],
									[
										10252,
										10262
									],
									[
										10339,
										10349
									],
									[
										10653,
										10663
									],
									[
										10842,
										10852
									],
									[
										11088,
										11098
									],
									[
										11290,
										11300
									],
									[
										11431,
										11441
									],
									[
										11613,
										11623
									],
									[
										11849,
										11859
									],
									[
										11999,
										12009
									],
									[
										12204,
										12214
									],
									[
										12295,
										12305
									],
									[
										12315,
										12325
									],
									[
										12344,
										12354
									],
									[
										12357,
										12367
									],
									[
										12440,
										12450
									],
									[
										12475,
										12485
									],
									[
										12549,
										12559
									],
									[
										12607,
										12617
									],
									[
										12678,
										12688
									],
									[
										12720,
										12730
									],
									[
										12805,
										12815
									],
									[
										12856,
										12866
									],
									[
										12944,
										12954
									],
									[
										13027,
										13037
									],
									[
										13079,
										13089
									],
									[
										13196,
										13206
									],
									[
										13562,
										13572
									],
									[
										13891,
										13901
									],
									[
										14149,
										14159
									],
									[
										14256,
										14266
									],
									[
										14629,
										14639
									],
									[
										14726,
										14736
									],
									[
										14800,
										14810
									],
									[
										14946,
										14956
									],
									[
										15369,
										15379
									],
									[
										15474,
										15484
									],
									[
										15553,
										15563
									],
									[
										15761,
										15771
									],
									[
										15847,
										15857
									],
									[
										15961,
										15971
									],
									[
										16180,
										16190
									],
									[
										16346,
										16356
									],
									[
										16503,
										16513
									],
									[
										16813,
										16823
									],
									[
										16897,
										16907
									],
									[
										17209,
										17219
									],
									[
										17818,
										17828
									],
									[
										17865,
										17875
									],
									[
										18100,
										18110
									],
									[
										18460,
										18470
									],
									[
										18594,
										18604
									],
									[
										18793,
										18803
									],
									[
										19466,
										19476
									],
									[
										19995,
										20005
									],
									[
										20172,
										20182
									],
									[
										21479,
										21489
									],
									[
										21787,
										21797
									],
									[
										21849,
										21859
									],
									[
										21946,
										21956
									],
									[
										21965,
										21975
									],
									[
										22207,
										22217
									],
									[
										22380,
										22390
									],
									[
										22465,
										22475
									],
									[
										22688,
										22698
									],
									[
										22743,
										22753
									],
									[
										22962,
										22972
									],
									[
										23119,
										23129
									],
									[
										23398,
										23408
									],
									[
										23620,
										23630
									],
									[
										23671,
										23681
									],
									[
										23698,
										23708
									],
									[
										23739,
										23749
									],
									[
										23956,
										23966
									],
									[
										24139,
										24149
									],
									[
										24363,
										24373
									],
									[
										24561,
										24571
									],
									[
										24752,
										24762
									],
									[
										24780,
										24790
									],
									[
										24967,
										24977
									],
									[
										25109,
										25119
									],
									[
										25288,
										25298
									],
									[
										25427,
										25437
									],
									[
										25459,
										25469
									],
									[
										25493,
										25503
									],
									[
										25577,
										25587
									],
									[
										25611,
										25621
									],
									[
										25948,
										25958
									],
									[
										26316,
										26326
									],
									[
										26402,
										26412
									],
									[
										26413,
										26423
									],
									[
										26439,
										26449
									],
									[
										26494,
										26504
									],
									[
										26783,
										26793
									],
									[
										27046,
										27056
									],
									[
										27067,
										27077
									],
									[
										27110,
										27120
									],
									[
										27344,
										27354
									],
									[
										27365,
										27375
									],
									[
										27568,
										27578
									],
									[
										27706,
										27716
									],
									[
										27766,
										27776
									],
									[
										28017,
										28027
									],
									[
										28206,
										28216
									],
									[
										28417,
										28427
									],
									[
										28439,
										28449
									],
									[
										28504,
										28514
									],
									[
										28806,
										28816
									],
									[
										28971,
										28981
									],
									[
										29061,
										29071
									],
									[
										29238,
										29248
									],
									[
										29559,
										29569
									],
									[
										29839,
										29849
									],
									[
										30132,
										30142
									],
									[
										30289,
										30299
									],
									[
										30636,
										30646
									],
									[
										30822,
										30832
									],
									[
										31026,
										31036
									],
									[
										31323,
										31333
									],
									[
										31410,
										31420
									],
									[
										31724,
										31734
									],
									[
										31913,
										31923
									],
									[
										32153,
										32163
									],
									[
										32345,
										32355
									],
									[
										32482,
										32492
									],
									[
										32660,
										32670
									],
									[
										32794,
										32804
									],
									[
										32941,
										32951
									],
									[
										32974,
										32984
									],
									[
										33124,
										33134
									],
									[
										33135,
										33145
									],
									[
										33148,
										33158
									],
									[
										33201,
										33211
									],
									[
										33420,
										33430
									],
									[
										33636,
										33646
									],
									[
										33823,
										33833
									],
									[
										34118,
										34128
									],
									[
										34310,
										34320
									],
									[
										34503,
										34513
									],
									[
										34709,
										34719
									],
									[
										34932,
										34942
									],
									[
										35228,
										35238
									],
									[
										35438,
										35448
									],
									[
										35579,
										35589
									],
									[
										35705,
										35715
									],
									[
										35811,
										35821
									],
									[
										36035,
										36045
									],
									[
										36162,
										36172
									],
									[
										36290,
										36300
									],
									[
										36450,
										36460
									],
									[
										36591,
										36601
									],
									[
										36837,
										36847
									],
									[
										36970,
										36980
									],
									[
										37176,
										37186
									],
									[
										37330,
										37340
									],
									[
										37512,
										37522
									],
									[
										37572,
										37582
									],
									[
										37592,
										37602
									],
									[
										37612,
										37622
									],
									[
										37623,
										37633
									],
									[
										37694,
										37704
									],
									[
										37727,
										37737
									],
									[
										37787,
										37797
									],
									[
										37824,
										37834
									],
									[
										37893,
										37903
									],
									[
										37923,
										37933
									],
									[
										38006,
										38016
									],
									[
										38045,
										38055
									],
									[
										38131,
										38141
									],
									[
										38202,
										38212
									],
									[
										38252,
										38262
									],
									[
										38559,
										38569
									],
									[
										38804,
										38814
									],
									[
										39174,
										39184
									],
									[
										39227,
										39237
									],
									[
										39256,
										39266
									],
									[
										39299,
										39309
									],
									[
										39545,
										39555
									],
									[
										39810,
										39820
									],
									[
										39985,
										39995
									],
									[
										40010,
										40020
									],
									[
										40074,
										40084
									],
									[
										40085,
										40095
									],
									[
										40332,
										40342
									],
									[
										40490,
										40500
									],
									[
										40685,
										40695
									],
									[
										40942,
										40952
									],
									[
										40999,
										41009
									],
									[
										41092,
										41102
									],
									[
										41132,
										41142
									],
									[
										41354,
										41364
									],
									[
										41411,
										41421
									],
									[
										41504,
										41514
									],
									[
										41544,
										41554
									],
									[
										41764,
										41774
									],
									[
										41788,
										41798
									],
									[
										41974,
										41984
									],
									[
										42035,
										42045
									],
									[
										42090,
										42100
									],
									[
										42123,
										42133
									],
									[
										42255,
										42265
									],
									[
										42425,
										42435
									],
									[
										42469,
										42479
									],
									[
										42489,
										42499
									],
									[
										42544,
										42554
									],
									[
										42833,
										42843
									],
									[
										42857,
										42867
									],
									[
										43093,
										43103
									],
									[
										43267,
										43277
									],
									[
										43427,
										43437
									],
									[
										43588,
										43598
									],
									[
										43781,
										43791
									],
									[
										43794,
										43804
									],
									[
										43918,
										43928
									],
									[
										44222,
										44232
									],
									[
										44284,
										44294
									],
									[
										44297,
										44307
									],
									[
										44348,
										44358
									],
									[
										44402,
										44412
									],
									[
										44420,
										44430
									],
									[
										44523,
										44533
									],
									[
										44647,
										44657
									],
									[
										44865,
										44875
									],
									[
										44978,
										44988
									],
									[
										45018,
										45028
									],
									[
										45122,
										45132
									],
									[
										45281,
										45291
									],
									[
										45316,
										45326
									],
									[
										45471,
										45481
									],
									[
										45487,
										45497
									],
									[
										45626,
										45636
									],
									[
										45765,
										45775
									],
									[
										45853,
										45863
									],
									[
										46116,
										46126
									],
									[
										46132,
										46142
									],
									[
										46280,
										46290
									],
									[
										46407,
										46417
									],
									[
										46604,
										46614
									],
									[
										46741,
										46751
									],
									[
										46799,
										46809
									],
									[
										46853,
										46863
									],
									[
										46913,
										46923
									],
									[
										46936,
										46946
									],
									[
										46989,
										46999
									],
									[
										47131,
										47141
									],
									[
										47215,
										47225
									],
									[
										47555,
										47565
									],
									[
										47586,
										47596
									],
									[
										47618,
										47628
									],
									[
										47664,
										47674
									],
									[
										47692,
										47702
									],
									[
										47735,
										47745
									],
									[
										47916,
										47926
									],
									[
										47949,
										47959
									],
									[
										47977,
										47987
									],
									[
										48057,
										48067
									],
									[
										48094,
										48104
									],
									[
										48196,
										48206
									],
									[
										48346,
										48356
									],
									[
										48383,
										48393
									],
									[
										48404,
										48414
									],
									[
										48511,
										48521
									],
									[
										48643,
										48653
									],
									[
										48691,
										48701
									],
									[
										48759,
										48769
									],
									[
										48808,
										48818
									],
									[
										48947,
										48957
									],
									[
										49004,
										49014
									],
									[
										49098,
										49108
									],
									[
										49127,
										49137
									],
									[
										49161,
										49171
									],
									[
										49172,
										49182
									],
									[
										49202,
										49212
									],
									[
										49295,
										49305
									],
									[
										49335,
										49345
									],
									[
										49451,
										49461
									],
									[
										49801,
										49811
									],
									[
										49892,
										49902
									],
									[
										49998,
										50008
									],
									[
										50104,
										50114
									],
									[
										50179,
										50189
									],
									[
										50322,
										50332
									],
									[
										50373,
										50383
									],
									[
										50469,
										50479
									],
									[
										50532,
										50542
									],
									[
										50574,
										50584
									],
									[
										50721,
										50731
									],
									[
										50749,
										50759
									],
									[
										50885,
										50895
									],
									[
										51083,
										51093
									],
									[
										51123,
										51133
									],
									[
										51178,
										51188
									],
									[
										51425,
										51435
									],
									[
										51635,
										51645
									],
									[
										51836,
										51846
									],
									[
										51922,
										51932
									],
									[
										51974,
										51984
									],
									[
										52464,
										52474
									],
									[
										52766,
										52776
									],
									[
										52789,
										52799
									],
									[
										52998,
										53008
									],
									[
										53009,
										53019
									],
									[
										53039,
										53049
									],
									[
										53212,
										53222
									],
									[
										53270,
										53280
									],
									[
										53334,
										53344
									],
									[
										53519,
										53529
									],
									[
										53562,
										53572
									],
									[
										53763,
										53773
									],
									[
										54174,
										54184
									],
									[
										54218,
										54228
									],
									[
										54306,
										54316
									],
									[
										54746,
										54756
									],
									[
										54860,
										54870
									],
									[
										54919,
										54929
									],
									[
										54967,
										54977
									],
									[
										55022,
										55032
									],
									[
										55126,
										55136
									],
									[
										55261,
										55271
									],
									[
										55307,
										55317
									],
									[
										55326,
										55336
									],
									[
										55353,
										55363
									],
									[
										55381,
										55391
									],
									[
										55604,
										55614
									],
									[
										55694,
										55704
									],
									[
										56074,
										56084
									],
									[
										56314,
										56324
									],
									[
										56544,
										56554
									],
									[
										56715,
										56725
									],
									[
										56728,
										56738
									],
									[
										56775,
										56785
									],
									[
										57007,
										57017
									],
									[
										57143,
										57153
									],
									[
										57250,
										57260
									],
									[
										57509,
										57519
									],
									[
										57716,
										57726
									],
									[
										58049,
										58059
									],
									[
										58264,
										58274
									],
									[
										58465,
										58475
									],
									[
										58679,
										58689
									],
									[
										58910,
										58920
									],
									[
										59226,
										59236
									],
									[
										59448,
										59458
									],
									[
										59595,
										59605
									],
									[
										59727,
										59737
									],
									[
										59837,
										59847
									],
									[
										60082,
										60092
									],
									[
										60215,
										60225
									],
									[
										60408,
										60418
									],
									[
										60574,
										60584
									],
									[
										60721,
										60731
									],
									[
										60984,
										60994
									],
									[
										61125,
										61135
									],
									[
										61319,
										61329
									],
									[
										61531,
										61541
									],
									[
										61890,
										61900
									],
									[
										61987,
										61997
									],
									[
										62175,
										62185
									],
									[
										62452,
										62462
									],
									[
										62609,
										62619
									],
									[
										62943,
										62953
									],
									[
										63129,
										63139
									],
									[
										63333,
										63343
									],
									[
										63663,
										63673
									],
									[
										63937,
										63947
									],
									[
										64209,
										64219
									],
									[
										64296,
										64306
									],
									[
										64610,
										64620
									],
									[
										64799,
										64809
									],
									[
										65045,
										65055
									],
									[
										65247,
										65257
									],
									[
										65388,
										65398
									],
									[
										65570,
										65580
									],
									[
										65806,
										65816
									],
									[
										65956,
										65966
									],
									[
										66161,
										66171
									],
									[
										66252,
										66262
									],
									[
										66272,
										66282
									],
									[
										66301,
										66311
									],
									[
										66314,
										66324
									],
									[
										66397,
										66407
									],
									[
										66432,
										66442
									],
									[
										66506,
										66516
									],
									[
										66564,
										66574
									],
									[
										66635,
										66645
									],
									[
										66677,
										66687
									],
									[
										66762,
										66772
									],
									[
										66813,
										66823
									],
									[
										66901,
										66911
									],
									[
										66984,
										66994
									],
									[
										67036,
										67046
									],
									[
										67153,
										67163
									],
									[
										67525,
										67535
									],
									[
										67838,
										67848
									],
									[
										68097,
										68107
									],
									[
										68268,
										68278
									],
									[
										68281,
										68291
									],
									[
										68328,
										68338
									],
									[
										68560,
										68570
									],
									[
										68696,
										68706
									],
									[
										68803,
										68813
									],
									[
										69062,
										69072
									],
									[
										69269,
										69279
									],
									[
										69602,
										69612
									],
									[
										69817,
										69827
									],
									[
										70018,
										70028
									],
									[
										70232,
										70242
									],
									[
										70463,
										70473
									],
									[
										70779,
										70789
									],
									[
										71001,
										71011
									],
									[
										71148,
										71158
									],
									[
										71280,
										71290
									],
									[
										71390,
										71400
									],
									[
										71635,
										71645
									],
									[
										71768,
										71778
									],
									[
										71961,
										71971
									],
									[
										72127,
										72137
									],
									[
										72274,
										72284
									],
									[
										72537,
										72547
									],
									[
										72678,
										72688
									],
									[
										72872,
										72882
									],
									[
										73160,
										73170
									],
									[
										73596,
										73606
									],
									[
										73693,
										73703
									],
									[
										73881,
										73891
									],
									[
										74235,
										74245
									],
									[
										74392,
										74402
									],
									[
										74726,
										74736
									],
									[
										74912,
										74922
									],
									[
										75116,
										75126
									],
									[
										75446,
										75456
									],
									[
										75720,
										75730
									],
									[
										75992,
										76002
									],
									[
										76079,
										76089
									],
									[
										76393,
										76403
									],
									[
										76582,
										76592
									],
									[
										76828,
										76838
									],
									[
										77030,
										77040
									],
									[
										77171,
										77181
									],
									[
										77353,
										77363
									],
									[
										77589,
										77599
									],
									[
										77739,
										77749
									],
									[
										77970,
										77980
									],
									[
										78061,
										78071
									],
									[
										78081,
										78091
									],
									[
										78110,
										78120
									],
									[
										78123,
										78133
									],
									[
										78206,
										78216
									],
									[
										78241,
										78251
									],
									[
										78315,
										78325
									],
									[
										78373,
										78383
									],
									[
										78444,
										78454
									],
									[
										78486,
										78496
									],
									[
										78571,
										78581
									],
									[
										78622,
										78632
									],
									[
										78710,
										78720
									],
									[
										78793,
										78803
									],
									[
										78845,
										78855
									],
									[
										79121,
										79131
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								173,
								173
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/kontakti.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1220,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "build/js/google-features.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 395,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/js/helper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1435,
						"regions":
						{
						},
						"selection":
						[
							[
								1383,
								1383
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1585,
						"regions":
						{
						},
						"selection":
						[
							[
								269,
								269
							]
						],
						"settings":
						{
							"auto_name": "1 Зачем нужен сайт?",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "avers.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"help",
				"build/js/helper.js"
			],
			[
				"scri",
				"src/scripts.jade"
			],
			[
				"layo",
				"src/layout.jade"
			],
			[
				"cus",
				"build/css/custom.css"
			],
			[
				"pack",
				"package.json"
			],
			[
				"grun",
				"Gruntfile.js"
			],
			[
				"scr",
				"src/scripts.jade"
			],
			[
				"inde",
				"src/index.jade"
			],
			[
				"pa",
				"package.json"
			],
			[
				"kon",
				"jade/kontakti.jade"
			],
			[
				"footer",
				"jade/footer.jade"
			],
			[
				"head",
				"jade/header.jade"
			],
			[
				"la",
				"jade/layout.jade"
			],
			[
				"he",
				"helper.js"
			],
			[
				"kota",
				"jade/kontakti.jade"
			],
			[
				"lay",
				"jade/layout.jade"
			],
			[
				"index",
				"jade/index.jade"
			],
			[
				"index.ja",
				"jade/index.jade"
			],
			[
				"layouja",
				"jade/layout.jade"
			],
			[
				"index.jade",
				"jade/index.jade"
			],
			[
				"scripts",
				"jade/scripts.jade"
			],
			[
				"navi",
				"jade/navigation.jade"
			],
			[
				"bindex",
				"bindex.html"
			],
			[
				"naviga",
				"jade/navigation.jade"
			],
			[
				"style",
				"style3.css"
			],
			[
				"s",
				"style3.css"
			],
			[
				"sty",
				"css/styles.css"
			],
			[
				"",
				"index.html"
			],
			[
				"key",
				"key.pem"
			],
			[
				"ke",
				"key"
			],
			[
				"k",
				"kei"
			],
			[
				"kei",
				"kei"
			],
			[
				"tmp",
				"tmp.pem"
			],
			[
				"crx",
				"node_modules/grunt-crx/lib/crx.js"
			],
			[
				"testhe",
				"test/testHelper.js"
			],
			[
				"main",
				"manifest.json"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 701.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 202.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
